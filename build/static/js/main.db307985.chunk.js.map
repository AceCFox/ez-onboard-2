{"version":3,"sources":["components/Device/Images/serial.png","components/Organization/Images/zefUser.jpeg","components/Organization/Images/packageReview.jpeg","components/Organization/Images/packageReviewGreyscale.jpeg","components/Device/Images/wallMount.jpg","components/Device/Images/singleheadped.jpg","components/Device/Images/dualheadped.jpg","components/Device/Images/zefproArrow.png","components/Device/Images/wallMountStylized.jpg","components/Device/Images/singleHeadStylized.jpg","components/Device/Images/7LLX9.jpg","components/Device/Images/breaker2.jpg","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/organizationReducer.js","redux/reducers/siteReducer.js","redux/reducers/newDevice.js","redux/reducers/breakerReducer.js","redux/reducers/allDeviceReducer.js","redux/reducers/zefUserReducer.js","redux/reducers/emailReducer.js","redux/reducers/tokenReducer.js","redux/reducers/allSerialReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/addOrganizationSaga.js","redux/sagas/editOrganizationSaga.js","redux/sagas/organizationSaga.js","redux/sagas/siteSaga.js","redux/sagas/breakerSaga.js","redux/sagas/addUserSaga.js","redux/sagas/deviceSaga.js","redux/sagas/finalSubmitSaga.js","redux/sagas/passwordSaga.js","redux/sagas/index.js","components/Buttons/DynamicButton.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ForgotPass/Forgot.js","components/ForgotPass/Reset.js","components/ProtectedRoute/ProtectedRoute.js","components/WelcomeScreen/WelcomeScreen.js","components/Organization/CreateOrganization.js","components/Organization/ViewOrganization.js","components/Organization/HomeScreen.js","components/Organization/EditOrganization.js","components/Device/HostSite/Add.js","components/Device/HostSite/Edit.js","components/Device/HostSite/Select.js","components/Device/DeviceSelectType.js","components/Device/DeviceSerial.js","components/Device/DeviceName.js","components/Device/DevicePrep.js","components/Device/Breaker/Add.js","components/Device/Breaker/Edit.js","components/Device/Breaker/Select.js","components/Device/DeviceReview.js","components/AddUser/UserTableRow.js","components/AddUser/AddUser.js","components/Submit/Submit.js","components/Submit/Completed.js","components/App/App.js","index.js","components/Device/Images/zefpro.png","components/Device/Images/dualHeadStylized.jpg"],"names":["module","exports","combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","organizationReducer","siteReducer","newDeviceReducer","site","breaker","serial","serial2","name","date","id","selectedBreakerReducer","siteBreakerReducer","allDeviceReducer","zefUserReducer","emailReducer","tokenTimeout","allSerialReducer","rootReducer","errors","user","organization","device","allDevice","zefUser","email","timeout","allSerial","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","unsetToken","userSaga","get","data","organization_id","addOrganization","addOrganizationSaga","editOrganization","editOrganizationSaga","getOrganization","submitOrganization","organizationSaga","getSite","addSite","editSite","getBreakers","addBreaker","editBreaker","breakerSaga","site_id","addUser","fetchZefUser","deleteZefUser","updateZefUser","addUserSaga","delete","addDevice","getDevice","putDevice","deleteDevice","getSerial","deviceSaga","org_id","serialArray","object","push","serial_number","f","mailPackage","submitSaga","getEmail","sendEmail","checkTimeout","updatePassword","passwordSaga","boolean","exists","Date","now","rootSaga","all","siteSaga","DynamicButton","inputProps","startIcon","endIcon","onClick","this","props","handleClick","disabled","isDisabled","variant","size","linkURL","component","Link","to","AddBoxTwoTone","CheckBoxTwoTone","ChevronLeft","ChevronRight","EvStationTwoTone","SaveTwoTone","Home","SaveAltTwoTone","setState","classes","buttonClasses","classNames","Button","className","Button__textContainer","text","Component","withStyles","transition","height","transform","color","backgroundColor","boxShadow","fontSize","borderRadius","position","right","left","padding","background","border","paddingLeft","paddingRight","paddingBottom","width","display","justifyContent","LoginPage","invalidEmail","password","forgot","event","preventDefault","dispatch","login","toLowerCase","history","handleInputChangeFor","propertyName","target","value","handleKeyDown","key","checkEmail","e","includes","Grid","container","justify","alignItems","item","xs","align","role","LoginPage__title","LoginPage__subTitle","TextField","BottomBuffer","required","error","onBlur","label","onChange","InputProps","root","maxLength","InputLabelProps","style","onKeyDown","LoginPage__buttonContainer","theme","marginBottom","maxWidth","caretColor","WebkitBoxShadow","connect","RegisterPage","open","first_name","last_name","phone","confirm_password","lowerEmail","handlePhoneNumberChange","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","Title","ButtonRightBuffer","ShortTextField","defaultCountry","disableAreaCodes","marginLeft","ButtonContainer","marginRight","textAlign","Forgot","showError","messageFromServer","Reset","confirmPassword","updated","passwordErr","confirmPasswordErr","tooShortDialog","mismatchDialog","disableInput","reset","token","match","params","dispatchPayload","length","loginButton","forgotButton","handleCloseModal","autoFocus","withRouter","ComponentToShow","ComponentToProtect","otherProps","WelcomeScreen","reduxState","previousProps","title","informationContainer","requirementsUL","HomeWorkTwoTone","SvgIcon","RoomTwoTone","AccountCircleTwoTone","fontFamily","listStyle","CreateOrganization","organizationName","primaryNumber","organizationAddress","handleAddOrg","actionObject","organizationEmail","user_id","userEmail","editor","primary","CreateOrganizationPage","SubTitle","TopBottomBuffer","LargeBottomBuffer","margin","ViewOrganization","ViewOrgPage","ViewOrgPage__title","ViewOrgPage__subTitle","ViewOrgPage__flexContainer","LargeRightBuffer","ViewOrgPage__flexContainer__titles","ViewOrgPage__flexContainer__information","address","ViewOrgPage__buttonContainer","fontWeight","flexDirection","marginTop","HomeScreen","HomeNavBar","HomeNavBar__container","float","HomeTitle","HomeSubTitle","CardContainer","Card","CardContainer__activeCard","CardActionArea","CardMedia","image","zefNetPro","alt","CardContainer__activeCard__image","GridListTileBar","subtitle","review","CardContainer__inactiveCard","greyScaleReview","CardContainer__inactiveCard__image","cursor","paddingTop","minHeight","minWidth","top","flexWrap","EditOrganization","handleEditOrg","EditOrgPage","EditOrgPage__title","SmallBottomBuffer","AddSite","handleChange","postObject","second_name","direction","alignContent","minorPadding","fullWidth","EditSite","editObject","handleCloseWithoutSave","HostSelect","selectedSite","edit","fullSiteInfo","componentDidMount","allSite","i","assignSite","mySite","Add","Edit","Paper","paper","elevation","FormControl","formControl","InputLabel","Select","MenuItem","map","index","hrWordDivder","hrWord","grow","spacing","flexGrow","borderBottom","lineHeight","DeviceSelectType","setTypeReducer","img","card","wallmount","media","single","double","DeviceSerial","serialNumber","confirmSerialNumber","serialNumber2","confirmSerialNumber2","number","handleNext","serial_number2","handleCopynPaste","borderedBox","src","zefpro","centerFont","form","textField","placeholder","onCopy","onPaste","Divider","buttonDiv","maxHeight","DeviceName","chargerName","installationDate","chooseDeviceImage","deviceImage","wallMount","singleHead","dualHead","handlePrevious","shrink","DevicePrep","GridList","cellHeight","GridListTile","gridListTile","AddBreaker","description","limit","alert1","alert2","handleClose1","handleClose2","startAdornment","InputAdornment","rows","multiline","EditBreaker","handleExit","BreakerSelect","breakers","selectedBreaker","fullBreakerInfo","allBreaker","assignBreaker","myBreaker","DeviceReview","missingField","repeatedSerial","saveDevice","installation_date","type_id","breaker_id","Left","FlexContainerColumn","CenterText","Titles","Information","InformationMarginBottom","wordBreak","UserTableRow","edit_mode","handleDelete","handleClickOpen","cancelEdit","viewMode","handleEdit","editMode","changesMade","TableRow","hover","TableCell","ViewCell","Tooltip","IconButton","SaveAlt","Close","Delete","EditCell","overflowX","whiteSpace","overflow","AddUser","handleAddUser","handleOpen","handleEditMode","x","handleViewMode","Table","ReviewTable","TableHead","ReviewTable__head","ReviewTable__head__cell","TableBody","Form","dircetion","MiniTextFields","tip","textFields","Submit","tableMode","deletedName","deletedID","checked","handleEditFor","install_date","substring","breaker_name","type_name","handleSubmit","sendObject","primary_user","host_sites","devices","onboardPackage","message","JSON","stringify","deleteObject","MainSubTitle","reviewTable","table","scope","DeviceSubTitle","Switch","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionActions","AccordionDetails","palette","secondary","wordWrap","Completed","createMuiTheme","typography","App","CssBaseline","exact","from","path","OrganizationHomeScreen","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.db307985.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/serial.f4fe0945.png\";","module.exports = __webpack_public_path__ + \"static/media/zefUser.2974a6b5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/packageReview.f956027e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/packageReviewGreyscale.45e959ef.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/wallMount.c323cd44.jpg\";","module.exports = __webpack_public_path__ + \"static/media/singleheadped.7c7aceb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dualheadped.8d6efbb3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zefproArrow.029fe9cb.png\";","module.exports = __webpack_public_path__ + \"static/media/wallMountStylized.d83d030b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/singleHeadStylized.4c17e515.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7LLX9.00b96791.jpg\";","module.exports = __webpack_public_path__ + \"static/media/breaker2.535e9916.jpg\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your email and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The email and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'please enter all required fields!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The email already has an account. Try again!';\n    default:\n      return state;\n  }\n};\n\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      case 'SET_TO_FORGOT_MODE':\n        return 'forgot';\n      case 'SET_TO_RESET_MODE':\n        return 'reset';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const organizationReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_ORGANIZATION':\n      return action.payload;\n    case 'UNSET_ORGANIZATION':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// organization will be on the redux state at:\n// state.organization\nexport default organizationReducer;","const siteReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SITE':\n        return action.payload;\n      case 'UNSET_SITE':\n        return [];\n      default:\n        return state;\n    }\n  };\n  \n  // site will be on the redux state at:\n  // state.site\n  export default siteReducer;","const newDeviceReducer = (state = {\n  site:{},\n  breaker:{},\n  serial: {},\n  serial2:'',\n  type: {},\n  name: '',\n  date: '',\n  id: '',\n}, action) => {\n    switch (action.type) {\n      case 'SET_DEVICE_SITE':\n        state.site = action.payload;\n        return state;\n      case 'SET_BREAKER':\n        state.breaker = action.payload;\n        return state;\n      case 'SET_SERIAL':\n        state.serial = action.payload;\n        return state;\n      case 'SET_SERIAL2':\n          state.serial2 = action.payload;\n          return state;\n      case 'SET_TYPE':\n        state.type = action.payload;\n        return state;\n      case 'SET_NAME':\n        state.name = action.payload;\n        return state;\n      case 'SET_DATE':\n        state.date = action.payload;\n        return state;\n      case 'SET_ID':\n          state.id = action.payload;\n          return state;\n      case 'CLEAR_DEVICE':\n          return {\n            site:{},\n            breaker:{},\n            serial: {},\n            serial2: '',\n            type: {},\n            name: '',\n            date: '',\n            id: '',\n          };\n      default:\n        return state;\n    }\n  };\n  \n  // newDevice will be on the redux state at:\n  // state.device\n  export default newDeviceReducer;","import {combineReducers} from 'redux';\n\nconst selectedBreakerReducer = (state = [], action) => {\n    switch(action.type){\n        case 'SET_BREAKER':\n            return action.payload;\n        case 'CLEAR_BREAKER':\n            return [];\n        default:\n            return state;\n    }\n}\n\nconst siteBreakerReducer = (state=[], action) => {\n    switch(action.type){\n        case 'SET_SITE_BREAKERS':\n            return action.payload;\n        case 'CLEAR_SITE_BREAKERS':\n            return [];\n        default:\n            return state;\n    }\n}\n\n\n// breaker will be on the redux state at:\n// state.breaker\nexport default combineReducers({\n    selectedBreakerReducer,\n    siteBreakerReducer\n})","const allDeviceReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_DEVICE':\n        return action.payload;\n      case 'UNSET_ALL_DEVICE':\n        return [];\n      default:\n        return state;\n    }\n  };\n  \n  // all devices associated with an org will be on the redux state at:\n  // state.allDevice\n  export default allDeviceReducer;","const zefUserReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ZEFUSER':\n        return action.payload;\n      case 'UNSET_ZEFUSER':\n        return [];\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default zefUserReducer;","const emailReducer = (state = '', action) => {\n    switch (action.type) {\n      case 'SET_EMAIL':\n        return action.payload;\n      case 'UNSET_EMAIL':\n        return '';\n      default:\n        return state;\n    }\n  };\n\n\n  // email will be on the redux state at:\n  // state.email\n  export default emailReducer;\n\n    \n\n  ","const tokenTimeout = (state = false, action) => {\n    switch (action.type) {\n      case 'TOKEN_EXPIRED':\n        return true;\n      case 'TOKEN_UNEXPIRED':\n        return false;\n      default:\n        return state;\n    }\n  };\n\n\n  // timeout boolean will be on the redux state at:\n  // state.timeout\n  export default tokenTimeout;\n","const allSerialReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_SERIAL':\n        return action.payload;\n      case 'UNSET_ALL_SERIAL':\n        return [];\n      default:\n        return state;\n    }\n  };\n  \n  // array of all serial numbers will be on the redux state at:\n  // state.serial\n  export default allSerialReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport organization from './organizationReducer';\nimport site from './siteReducer';\nimport device from './newDevice';\nimport breaker from './breakerReducer';\nimport allDevice from './allDeviceReducer';\nimport zefUser from './zefUserReducer';\nimport email from './emailReducer';\nimport timeout from './tokenReducer';\nimport allSerial from './allSerialReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  organization,//will have an id, name, address, email, and possible phone\n  site,// will have an array of objects containing id, first_name, last_name, address, email, and possible phone\n  device,//will have a site, breaker, name, serial number\n  breaker,\n  allDevice, //will have some giant heccin device objects ya\n  zefUser,\n  email,//has an array with all of the emails currently stored in the db\n  timeout, //boolean that says if timeout has been reached\n  allSerial, //array of strings of all serials stored in DB\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n    yield put({ type: 'UNSET_ORGANIZATION' });\n    yield put({ type: 'UNSET_SITE' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n   //if there is an organization associated with this user, get the organization data\n    if(response.data.organization_id){\n      yield put({type: 'FETCH_ORGANIZATION', payload: response.data.organization_id});\n    }\n    if (response.data){\n      yield put({ type: 'UNSET_TOKEN' });\n    }\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"UNSET_TOKEN\" actions\nfunction* unsetToken() {\n  try {\n   yield axios.put('/api/user/reset');\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n  yield takeLatest('UNSET_TOKEN', unsetToken);\n}\n\nexport default userSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\n//saga fires on \"ADD_ORGANIZATION ACTIONS\", posts a new org and chains to fetch organization saga\nfunction* addOrganization(action) {\n  try {\n    const response = yield axios.post(\"/api/organization\", action.payload);\n    yield put({ type: \"FETCH_ORGANIZATION\", payload: response.data.id });\n  } catch (error) {\n    console.log(\"Trouble adding organization\", error);\n  }\n}\n\nfunction* addOrganizationSaga() {\n  yield takeLatest(\"ADD_ORGANIZATION\", addOrganization);\n}\n\nexport default addOrganizationSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* editOrganization(action) {\n  try {\n    yield axios.put(\"/api/organization\", action.payload);\n    yield put({ type: \"FETCH_ORGANIZATION\", payload: action.payload.id });\n  } catch (error) {\n    console.log(\"Trouble editing organization\", error);\n  }\n}\n\nfunction* editOrganizationSaga() {\n  yield takeLatest(\"EDIT_ORGANIZATION\", editOrganization);\n}\n\nexport default editOrganizationSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"FETCH_ORGANIZATION\" actions\nfunction* getOrganization(action) {\n  try {\n    //get organization from database/server\n    const response = yield axios.get('/api/organization/' + action.payload);\n    // store organizaiton in organization reducer\n    yield put({ type: 'SET_ORGANIZATION', payload: response.data[0] });\n    yield put({type: 'FETCH_SITE', payload: response.data[0].id});\n    yield put({ type: 'GET_ALL_DEVICE', payload: response.data[0].id});\n    yield put({type: 'FETCH_ZEFUSER', payload: response.data[0].id})\n  } catch (error) {\n      console.log('Error with organization get:', error);\n  }\n}\n\nfunction* submitOrganization (action) {\n  try{\n    yield axios.put('/api/organization/submit/' + action.payload);\n  } catch (error) {\n    console.log('Error with organization get:', error);\n  }\n}\n\n\nfunction* organizationSaga() {\n  yield takeLatest('FETCH_ORGANIZATION', getOrganization);\n  yield takeLatest('SUBMIT_ORGANIZATION', submitOrganization);\n}\n\nexport default organizationSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"FETCH_SITE\" actions\nfunction* getSite(action) {\n  try {\n    //get site from database/server\n    const response = yield axios.get('/api/site/' + action.payload);\n    // store site in site reducer\n    yield put({ type: 'SET_SITE', payload: response.data });\n    \n  } catch (error) {\n      console.log('Error with site get:', error);\n  }\n}\n// worker Saga: will be fired on \"POST_SITE\" actions\nfunction* addSite(action){\n    try {\n    //post new site to site table\n    const response = yield axios.post('/api/site', action.payload);\n    //add the returned id from the post call to our action payload \n    action.payload.id = response.data[0].id;\n     //call the GET saga to retrieve updated info\n    yield put({ type: 'FETCH_SITE', payload: action.payload.organization_id})\n    yield put({type: 'SET_DEVICE_SITE', payload: action.payload});    \n    } catch (error) {\n        console.log('error with site post:', error);\n    }\n}\n\nfunction* editSite(action){\n  try {\n  //put updates to existing site into the site table\n  yield axios.put('/api/site', action.payload);\n   //call the GET saga to retrieve updated info\n  yield put({ type: 'FETCH_SITE', payload: action.payload.organization_id})\n  yield put({type: 'SET_DEVICE_SITE', payload: action.payload});    \n  } catch (error) {\n      console.log('error with site post:', error);\n  }\n}\n\nfunction* organizationSaga() {\n  yield takeLatest('FETCH_SITE', getSite);\n  yield takeLatest('POST_SITE', addSite);\n  yield takeLatest('EDIT_SITE', editSite);\n}\n\nexport default organizationSaga;","import {put, takeLatest} from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getBreakers(action){\n    try{\n        const response = yield axios.get(`/api/breaker/${action.payload}`);\n        yield put({type: 'SET_SITE_BREAKERS', payload: response.data})\n    }\n    catch(error){\n        console.log('Error fetching breakers from database:', error);\n    }\n}\n\n// worker Saga: will be fired on \"POST_BREAKER\" actions\nfunction* addBreaker(action){\n    try {\n    //post new breaker to breaker table\n    const response = yield axios.post('/api/breaker', action.payload);\n\n    //call the GET saga to retrieve updated info\n    yield put({ type: 'FETCH_SITE_BREAKERS', payload: action.payload.site_id});\n    action.payload.id = response.data[0].id;\n    yield put({type: 'SET_BREAKER', payload: action.payload});\n    } catch (error) {\n        console.log('error with breaker post:', error);\n    }\n}\n\n//will fire on \"EDIT_BREAKER\" actions\nfunction* editBreaker(action){\n    try {\n    //put updates to existing site into the site table\n    yield axios.put('/api/breaker', action.payload);\n     //call the GET saga to retrieve updated info\n    yield put({ type: 'FETCH_SITE_BREAKERS', payload: action.payload.site_id})\n    yield put({type: 'SET_BREAKER', payload: action.payload});    \n    } catch (error) {\n        console.log('error with breaker edit:', error);\n    }\n  }\n\nfunction* breakerSaga(){\n    yield takeLatest('FETCH_SITE_BREAKERS', getBreakers);\n    yield takeLatest('POST_BREAKER', addBreaker);\n    yield takeLatest('EDIT_BREAKER', editBreaker);\n}\n\nexport default breakerSaga;","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* addUser(action) {\n  try {\n    yield axios.post(\"/api/add-user\", action.payload);\n    yield put ({ type: 'FETCH_ZEFUSER', payload: action.payload.organization_id})\n  } catch (error) {\n    console.log(\"Trouble adding User\", error);\n  }\n}\n\nfunction* fetchZefUser(action) {\n    try {\n      const response = yield axios.get(`/api/add-user/${action.payload}`);\n      yield put ({ type: 'SET_ZEFUSER', payload: response.data})\n    } catch (error) {\n      console.log(\"Trouble getting users\", error);\n    }\n  }\n\n  function* deleteZefUser(action) {\n    try {\n      yield axios.delete(`/api/add-user/${action.payload.id}`);\n      yield put ({ type: 'FETCH_ZEFUSER', payload: action.payload.organization_id})\n    } catch (error) {\n      console.log(\"Trouble deleting users\", error);\n    }\n  }\n\n  function* updateZefUser(action) {\n    try {\n      yield axios.put(`/api/add-user/${action.payload.id}`, action.payload);\n      yield put ({ type: 'FETCH_ZEFUSER', payload: action.payload.organization_id})\n    } catch (error) {\n      console.log(\"Trouble updating users\", error);\n    }\n  }\n\nfunction* addUserSaga() {\n  yield takeLatest(\"ADD_USER\", addUser);\n  yield takeLatest(\"FETCH_ZEFUSER\", fetchZefUser);\n  yield takeLatest(\"DELETE_ZEFUSER\", deleteZefUser);\n  yield takeLatest(\"UPDATE_ZEFUSER\", updateZefUser);\n}\n\nexport default addUserSaga;","import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\n\nfunction* addDevice(action) {\n  try {\n    yield axios.post(\"/api/device\", action.payload);\n    yield put({ type: 'GET_ALL_DEVICE', payload: action.payload.org_id });\n  } catch (error) {\n    console.log(\"Trouble adding device\", error);\n  }\n}\n\nfunction* getDevice(action) {\n    try {\n      const response = yield axios.get(\"/api/device/all/\" + action.payload);\n      yield put({ type: 'SET_ALL_DEVICE', payload: response.data });\n    } catch (error) {\n      console.log(\"Trouble getting devices\", error);\n    }\n  }\n\nfunction* putDevice(action) {\n    try {\n      yield axios.put(\"/api/device/\" + action.payload.id, action.payload);\n      yield put({ type: 'GET_ALL_DEVICE', payload: action.payload.org_id });\n    } catch (error) {\n      console.log(\"Trouble updating device\", error);\n    }\n  }\n\n  function* deleteDevice(action) {\n    try {\n      yield axios.delete(\"/api/device/\" + action.payload.id );\n      yield put({ type: 'GET_ALL_DEVICE', payload: action.payload.org_id });\n    } catch (error) {\n      console.log(\"Trouble deleting device\", error);\n    }\n  }\n\n  function* getSerial() {\n    try {\n      const response = yield axios.get(\"/api/device/serial\");\n      //build an array of strings, not objects\n      let serialArray = []\n      for (let object of response.data){\n        serialArray.push(object.serial_number)\n      }\n      yield put({ type: 'SET_ALL_SERIAL', payload: serialArray });\n    } catch (error) {\n      console.log(\"Trouble getting device serial numbers\", error);\n    }\n  }\n\nfunction* deviceSaga() {\n  yield takeLatest(\"GET_SERIAL_NUMBERS\", getSerial);\n  yield takeLatest(\"ADD_DEVICE\", addDevice);\n  yield takeLatest(\"GET_ALL_DEVICE\", getDevice);\n  yield takeLatest(\"UPDATE_DEVICE\", putDevice);\n  yield takeLatest(\"DELETE_DEVICE\", deleteDevice)\n}\n\nexport default deviceSaga;\n","import {takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"FETCH_ORGANIZATION\" actions\nfunction* mailPackage(action) {\n  try {\n    yield axios.post('/api/package/send/',  action.payload);\n  } catch (error) {\n      console.log('Error with organization get:', error);\n  }\n}\n\n\nfunction* submitSaga() {\n  yield takeLatest('MAIL_PACKAGE', mailPackage);\n}\n\nexport default submitSaga;","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* getEmail(action) {\n  try {\n    //check if the email entered exists in the db\n    const response = yield axios.post(\"/api/user/email\", {email: action.payload});\n    const boolean = response.data[0].exists\n    yield put ({ type: 'SET_EMAIL', payload: boolean})\n    console.log('email search response: ', boolean);\n    //call the send email saga if the email exists in the db\n    if (boolean) {\n        yield put ({ type: 'SEND_EMAIL', payload:action.payload })\n    }\n  } catch (error) {\n    console.log(\"problem searching emails for match\", error);\n  }\n}\n\nfunction* sendEmail(action) {\n    try{\n        yield axios.post(\"/api/package/recovery\", {email: action.payload} )\n       // console.log(action.payload);\n    } catch (error){\n        console.log('problem sending recovery email to user: ', error)\n    }\n}\n\nfunction* checkTimeout(action){\n    try{\n        const response = yield axios.get(\"/api/user/timeout/\" + action.payload );\n        //check if expiration time has passed\n        console.log('back from server with', response.data, `date now is:`, Date.now() )\n        if ((response.data.timeout)&& (response.data.timeout > Date.now())){\n            console.log('NOT EXPIRED WOO!')\n            yield put ({ type: 'TOKEN_UNEXPIRED'})\n        } else{\n            console.log (\"LINK EXPIRED!!!\")\n            //reducer with boolean indication of this to render a link and a message on the DOM\n            yield put ({ type: 'TOKEN_EXPIRED'})\n        }\n    } catch (error){\n        console.log('problem getting timeout: ', error)\n    }\n}\n\nfunction* updatePassword(action) {\n    try{\n        yield axios.put(\"/api/user/password\", action.payload )\n        console.log(action.payload);\n    } catch (error){\n        console.log('problem updating password: ', error)\n    }\n}\n\nfunction* passwordSaga() {\n    yield takeLatest('FETCH_EMAIL', getEmail);\n    yield takeLatest('SEND_EMAIL', sendEmail);\n    yield takeLatest('CHECK_TIMEOUT', checkTimeout);\n    yield takeLatest ('UPDATE_PASSWORD', updatePassword);\n  }\n  \n  export default passwordSaga;","import { all } from \"redux-saga/effects\";\nimport loginSaga from \"./loginSaga\";\nimport registrationSaga from \"./registrationSaga\";\nimport userSaga from \"./userSaga\";\nimport addOrganizationSaga from \"./addOrganizationSaga\";\nimport editOrganizationSaga from \"./editOrganizationSaga\";\nimport organizationSaga from './organizationSaga';\nimport siteSaga from './siteSaga';\nimport breakerSaga from \"./breakerSaga\";\nimport addUser from \"./addUserSaga\";\nimport deviceSaga from './deviceSaga';\nimport submitSaga from './finalSubmitSaga'\nimport passwordSaga from './passwordSaga'\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    addOrganizationSaga(),\n    editOrganizationSaga(),\n    organizationSaga(),\n    siteSaga(),\n    breakerSaga(),\n    addUser(),\n    deviceSaga(),\n    submitSaga(),\n    passwordSaga(),\n  ]);\n}\n","import React, {Component} from 'react';\nimport {Button, withStyles} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {ChevronLeft, ChevronRight, SaveAltTwoTone, Home as HomeIcon, EditTwoTone as EditIcon, EvStationTwoTone, SaveTwoTone, AddBoxTwoTone, CheckBoxTwoTone} from '@material-ui/icons';\n\n/*\n    DynamicButton API\n        |NAME|          |TYPE|            |DEFAULT|    |DESCRIPTION|\n        text            string                          will be the text inside of the button\n        type            'glow'                          Sets styling type and icon of button\n                        | 'home'\n                        | 'home-glow'                   A glow button with home icon\n                        | 'previous'\n                        | 'next'\n                        | 'edit'\n                        | 'edit-glow'                   A glow button with edit icon\n                        | 'save'\n                        | 'review'\n                        | 'organization'\n                        | 'add'\n                        | 'confirm'\n        isDisabled      boolean             false       toggles the disabled attribute\n        handleClick     function()                      passed in as onClick function\n        linkURL         '/string'                       will add component={Link} and set $string as to='/$string'\n*/\n\nconst styles = {\n    Button:{\n        transition: 'transform .2s ease-in-out',\n        height: '36px',\n        '&:hover': {\n            transform: 'scale(1.03)',\n        }\n    },\n    'Button--glow':{\n        color: '#006dcc',\n        backgroundColor: '#f1f1f1',\n        '&:hover':{\n          color: '#006dcc',\n          backgroundColor: 'white', \n          boxShadow: '0 0 5px #c8ffff,-5px 0 10px #66fbfb, 5px 0 15px #049494'\n        }\n    },\n    'Button--dark':{\n        color: 'white',\n        backgroundColor: '#1c2447',\n        fontSize: '12px',\n        borderRadius: '5px',\n        position: 'absolute',\n        right: '0px',\n        '&:hover': {\n            backgroundColor: '#243953',\n        }\n      },\n\n      'Button--dark2':{\n        color: 'white',\n        backgroundColor: '#1c2447',\n        fontSize: '12px',\n        borderRadius: '5px',\n        position: 'absolute',\n        left: '0px',\n        '&:hover': {\n            backgroundColor: '#243953',\n        }\n      },\n\n    'Button--editIconTransparent':{\n        padding: '0px 6px',\n        background: 'transparent',\n        border: '1px solid grey',\n    },\n    'Button--previousIcon':{\n        paddingLeft: '8px',\n    }, \n    'Button--editIconGlow':{\n        padding: '0px 6px',\n        color: '#006dcc',\n        backgroundColor: '#f1f1f1',\n        '&:hover':{\n          color: '#006dcc',\n          backgroundColor: 'white', \n          boxShadow: '0 0 5px #c8ffff,-5px 0 10px #66fbfb, 5px 0 15px #049494'\n        }\n    },\n    'Button--homeIcon':{\n        paddingLeft: '8px',\n    },\n    'Button--homeIconGlow':{\n        paddingLeft: '8px',\n        color: '#006dcc',\n        backgroundColor: '#f1f1f1',\n        '&:hover':{\n          color: '#006dcc',\n          backgroundColor: 'white', \n          boxShadow: '0 0 5px #c8ffff,-5px 0 10px #66fbfb, 5px 0 15px #049494'\n        }\n    },\n    'Button--primary':{\n        paddingRight: \"8px\",\n        backgroundColor: \"#3f51b5\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: '#757de8',\n        }\n    },\n    'Button--primary--basic':{\n        backgroundColor: \"#3f51b5\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: '#757de8',\n        }\n    },\n    'Button--outlined':{\n        color:'white',\n        border: '1px solid white',\n        backgroundColor: 'transparent',\n        height: '40px',\n        '&:hover': {\n            backgroundColor: 'white',\n            color: 'black',\n        }\n    },\n    'Button--outlined--large':{\n        fontSize: '26px',\n        paddingBottom: '6px',\n        '&:hover': {\n            transform: 'scale(1.02)',\n        }\n    },\n    'Button__textContainer':{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n\n}\n\nclass DynamicButton extends Component{\n    state = {\n        inputProps: {},\n        startIcon: '',\n        endIcon: ''\n    }\n    componentDidMount(){\n        //this object will hold input attributes from this.props for DynamicButton\n        const inputProps = {onClick: this.props.handleClick, disabled: this.props.isDisabled};\n\n        //add properties to inputProps depending on this.props.type\n        switch(this.props.type){\n            case 'edit':\n                inputProps.variant = 'outlined'\n                inputProps.size='small'\n                break;\n            case 'logOut':\n                inputProps.variant = 'outlined'\n                inputProps.size='medium'\n                break;\n            case 'organization':\n                inputProps.variant = 'outlined'\n                inputProps.size='medium'\n                break;\n            default:\n                inputProps.variant='contained'\n                inputProps.size='medium'\n        }\n    \n        //add properties to inputProps depending on truthy/falsy this.props.linkURL\n        if(this.props.linkURL){\n            inputProps.component = Link\n            inputProps.to= this.props.linkURL\n        }\n        \n        //set starting values of icons to React Fragment\n        let startIcon = <></>;\n        let endIcon = <></>;\n\n        //update values of icon depending on this.props.type\n        switch(this.props.type){\n            case 'add':\n                startIcon = <AddBoxTwoTone/>;\n                break;\n            case 'confirm':\n                startIcon = <CheckBoxTwoTone/>\n                break;\n            case 'previous':\n                startIcon = <ChevronLeft/>;\n                break;\n            case 'next':\n                endIcon = <ChevronRight/>;\n                break;\n            case 'review':\n                endIcon = <EvStationTwoTone/>;\n                break;\n            case 'save':\n                endIcon = <SaveTwoTone/>\n                break;\n            case 'edit':\n            case 'edit-glow':\n                startIcon = <EditIcon/>;\n                break;\n            case 'home':\n            case 'home-glow':\n                startIcon = <HomeIcon/>;\n                break;\n            case 'submit':\n                startIcon = <SaveAltTwoTone/>;\n                break;\n            default:\n                break;\n        }\n\n        //set input attribute object and icon values as state values\n        this.setState({\n            ...this.state,\n            startIcon,\n            endIcon,\n            inputProps\n        })\n    }\n    render(){\n        const {classes} = this.props;\n\n        //conditionally add classes and bundle classes together, from type prop value\n        //this uses the classnames dependency: https://www.npmjs.com/package/classnames\n        const buttonClasses = classNames(\n            classes.Button, \n            {[classes['Button--glow']]: (this.props.type === 'glow')},\n            {[classes['Button--dark']]: (this.props.type === 'dark')},\n            {[classes['Button--dark2']]: (this.props.type === 'dark2')},\n            {[classes['Button--previousIcon']]: (this.props.type === 'previous')},\n            {[classes['Button--primary--basic']]: (this.props.type === 'add')},\n            {[classes['Button--primary--basic']]: (this.props.type === 'confirm')},\n            {[classes['Button--primary']]: (this.props.type === 'next')},\n            {[classes['Button--primary']]: (this.props.type === 'review')},\n            {[classes['Button--primary']]: (this.props.type === 'save')},\n            {[classes['Button--primary']]: (this.props.type === 'submit')},\n            {[classes['Button--outlined']]: (this.props.type === 'logOut')},\n            {[classes['Button--homeIcon']]: (this.props.type === 'home')},\n            {[classes['Button--homeIconGlow']]: (this.props.type === 'home-glow')},\n            {[classes['Button--editIconTransparent']]: (this.props.type === 'edit')},\n            {[classes['Button--editIconGlow']]: (this.props.type === 'edit-glow')},\n            {[classes['Button--outlined']]: (this.props.type === 'organization')},\n            {[classes['Button--outlined--large']]: (this.props.type === 'organization')},\n            );\n        return(\n            <>\n                {/*Spread conditional attributes from state*/}\n                <Button className={buttonClasses} {...this.state.inputProps}>\n                    <span className={classes.Button__textContainer}>\n                        {/*Render held icon values, before/after props text*/}\n                        {this.state.startIcon}\n                        {this.props.text}\n                        {this.state.endIcon}\n                    </span>\n                </Button>\n            </>\n        )\n    }\n}\n\nDynamicButton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DynamicButton);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\nconst styles = (theme) => ({\n  BottomBuffer: {\n    marginBottom: \"1rem\",\n  },\n  LoginPage__buttonContainer: {\n    marginBottom: \"150px\",\n    position: \"relative\",\n    maxWidth: \"400px\",\n  },\n  LoginPage: {\n    color: \"white\",\n  },\n  LoginPage__title: {\n    fontSize: \"30px\",\n  },\n  LoginPage__subTitle: {\n    fontSize: \"20px\",\n    marginBottom: \"2rem\",\n  },\n  TextField: {\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    width: \"400px\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n});\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    invalidEmail: false,\n    password: \"\",\n  };\n\n  //forgot password function\n  forgot = (event) => {\n    event.preventDefault();\n    this.props.dispatch({ type: \"SET_TO_FORGOT_MODE\" })\n  }\n\n  //handles login \n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.email && this.state.password &&!this.state.invalidEmail) {\n      this.props.dispatch({\n        type: \"LOGIN\",\n        payload: {\n          email: this.state.email.toLowerCase(),\n          password: this.state.password,\n        },\n      });\n      this.props.history.push(\"/home\");\n    } else {\n      this.props.dispatch({ type: \"LOGIN_INPUT_ERROR\" });\n    }\n  }; // end login\n\n  //input handler for all input fields\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      this.login(event);\n    }\n  };\n\n//validates email input\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        invalidEmail: true,\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.LoginPage} align=\"center\">\n          {this.props.errors.loginMessage && (\n            <h2 role=\"alert\">{this.props.errors.loginMessage}</h2>\n          )}\n\n          <h2 className={classes.LoginPage__title}>\n            Welcome to ZEFNET EZ Onboarding!{\" \"}\n          </h2>\n          <p className={classes.LoginPage__subTitle}>\n            The first stop for a new ZEF Energy customer\n          </p>\n          <TextField\n            className={classes.BottomBuffer}\n            required\n            variant=\"filled\"\n            error={this.state.invalidEmail}\n            onBlur={this.checkEmail}\n            label=\"Email Address\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor(\"email\")}\n            InputProps={{ classes: { root: classes.TextField } }}\n            inputProps={{ maxLength: 100, className: classes.TextField }}\n            InputLabelProps={{ style: { color: \"white\" } }}\n          />\n          <br />\n          <TextField\n            className={classes.BottomBuffer}\n            required\n            variant=\"filled\"\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleInputChangeFor(\"password\")}\n            InputProps={{ classes: { root: classes.TextField } }}\n            inputProps={{ maxLength: 1000, className: classes.TextField }}\n            InputLabelProps={{ style: { color: \"white\" } }}\n            onKeyDown={this.handleKeyDown}\n          />\n          <Grid\n            item\n            align=\"center\"\n            className={classes.LoginPage__buttonContainer}\n          >\n            <DynamicButton\n              type=\"dark2\"\n              text=\"Forgot password?\"\n              handleClick = {this.forgot}\n            />\n            <DynamicButton\n              type=\"glow\"\n              text=\"Sign in\"\n              handleClick={this.login}\n            />\n            <DynamicButton\n              type=\"dark\"\n              text=\"New User?\"\n              handleClick={() =>\n                this.props.dispatch({ type: \"SET_TO_REGISTER_MODE\" })\n              }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nLoginPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(LoginPage));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  TextField,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Button,\n} from \"@material-ui/core\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\nconst styles = (theme) => ({\n  BottomBuffer: {\n    marginBottom: \"10px\",\n  },\n  ButtonRightBuffer: {\n    marginRight: \"14px\",\n  },\n  ButtonContainer: {\n    position: \"relative\",\n    maxWidth: \"450px\",\n  },\n  RegisterPage: {\n    color: \"white\",\n    marginBottom: \"100px\",\n    width: \"450px\",\n    textAlign: 'center'\n  },\n  Title: {\n    fontSize: \"30px\",\n    marginBottom: \"1rem\",\n    textAlign: 'center'\n  },\n  TextField: {\n    width: \"400px\",\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n  ShortTextField: {\n    width: \"193px\",\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n});\n\nclass RegisterPage extends Component {\n  state = {\n    invalidEmail: false,\n    open: false,\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    phone: \"\",\n    confirm_password: \"\",\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.email &&\n      this.state.password &&\n      this.state.first_name &&\n      this.state.last_name &&\n      !this.state.invalidEmail\n    ) {\n      if (this.state.password === this.state.confirm_password) {\n        const lowerEmail = this.state.email.toLowerCase();\n        this.props.dispatch({\n          type: \"REGISTER\",\n          payload: {\n            email: lowerEmail,\n            password: this.state.password,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            phone: this.state.phone,\n          },\n        });\n        this.props.history.push(\"/home\");\n      } else {\n        //open error dialog for password mismatch\n        this.setState({ ...this.state, open: true });\n      }\n    } else {\n      this.props.dispatch({ type: \"REGISTRATION_INPUT_ERROR\" });\n    }\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handlePhoneNumberChange = (value) => {\n    this.setState({\n      phone: value,\n    });\n  };\n\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        invalidEmail: true,\n      });\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid item className={classes.RegisterPage}>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"password-missmatch\"\n          aria-describedby=\"make-sure-passwords-match\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"make-sure-passwords-match\">\n              Oops! Passwords don't match!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        {this.props.errors.registrationMessage && (\n          <h2 className=\"alert\" role=\"alert\">\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <h1 className={classes.Title}>Create User Account</h1>\n        <TextField\n          required\n          variant=\"filled\"\n          className={classes.ButtonRightBuffer}\n          name=\"first_name\"\n          label=\"First Name\"\n          value={this.state.first_name}\n          onChange={this.handleInputChangeFor(\"first_name\")}\n          InputProps={{ classes: { root: classes.ShortTextField } }}\n          inputProps={{ maxLength: 50, className: classes.ShortTextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <TextField\n          required\n          variant=\"filled\"\n          className={classes.BottomBuffer}\n          label=\"Last Name\"\n          name=\"last_name\"\n          value={this.state.last_name}\n          onChange={this.handleInputChangeFor(\"last_name\")}\n          InputProps={{ classes: { root: classes.ShortTextField } }}\n          inputProps={{ maxLength: 100, className: classes.ShortTextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          required\n          variant=\"filled\"\n          error={this.state.invalidEmail}\n          onBlur={this.checkEmail}\n          className={classes.BottomBuffer}\n          label=\"Email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.handleInputChangeFor(\"email\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 100, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          required\n          variant=\"filled\"\n          className={classes.BottomBuffer}\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleInputChangeFor(\"password\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 1000, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          required\n          variant=\"filled\"\n          className={classes.BottomBuffer}\n          type=\"password\"\n          name=\"confirm_password\"\n          label=\"Confirm Password\"\n          value={this.state.confirm_password}\n          onChange={this.handleInputChangeFor(\"confirm_password\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 1000, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <div>\n          <MuiPhoneNumber\n            defaultCountry={\"us\"}\n            variant=\"filled\"\n            disableAreaCodes=\"true\"\n            label=\"Primary Phone (optional)\"\n            name=\"phone\"\n            type=\"tel\"\n            value={this.state.phone}\n            onChange={this.handlePhoneNumberChange}\n            InputProps={{ classes: { root: classes.TextField } }}\n            inputProps={{ maxLength: 30, className: classes.TextField }}\n            InputLabelProps={{ style: { color: \"white\", marginLeft: '50px'} }}\n          />\n        </div>\n        <br />\n        <Grid\n          item\n          align=\"center\"\n          justify=\"center\"\n          className={classes.ButtonContainer}\n        >\n          <DynamicButton\n            type=\"glow\"\n            handleClick={this.registerUser}\n            text=\"Create Account!\"\n          />\n          <DynamicButton\n            type=\"dark\"\n            handleClick={() =>\n              this.props.dispatch({ type: \"SET_TO_LOGIN_MODE\" })\n            }\n            text=\"Existing User?\"\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(RegisterPage));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\nconst styles = (theme) => ({\n  BottomBuffer: {\n    marginBottom: \"1rem\",\n  },\n  LoginPage__buttonContainer: {\n    marginBottom: \"150px\",\n    position: \"relative\",\n    maxWidth: \"400px\",\n  },\n  LoginPage: {\n    color: \"white\",\n  },\n  LoginPage__title: {\n    fontSize: \"30px\",\n  },\n  LoginPage__subTitle: {\n    fontSize: \"20px\",\n    marginBottom: \"2rem\",\n  },\n  TextField: {\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    width: \"400px\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n});\n\nclass Forgot extends Component {\n  state = {\n    email: \"\",\n    invalidEmail: false,\n    showError: false,\n    messageFromServer: ''\n  };\n\n\n\n  //forgot password function\n  sendEmail = (event) => {\n    event.preventDefault();\n    if (this.state.email === ''){\n        this.setState({\n            showError: false\n        });\n    } else{\n        this.props.dispatch({ type: \"FETCH_EMAIL\",  payload: this.state.email}); \n    }\n  }\n\n  //input handler for all input fields\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      //Add recovery fucntion here\n        this.sendEmail();\n    }\n  };\n\n//validates email input\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        invalidEmail: true,\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.LoginPage} align=\"center\">\n          {(this.props.state.email === true)  && (\n            <h2 role=\"alert\">Success! an email has been sent with a link to reset your password. \n             It will expire in 20 minutes. Please follow the directions in the email or click \"send link\" to send a new link.</h2>\n          )}\n          {(this.props.state.email === false)  && (\n            <h2 role=\"alert\">oops that email does not exist in our database! Please check your spelling and try again, or click \"new user\" to make a new account.'</h2>\n          )}\n          <h2 className={classes.LoginPage__title}>\n            Password Recovery\n          </h2>\n          <p className={classes.LoginPage__subTitle}>\n            Enter your email to receive a link to reset your password:\n          </p>\n          <TextField\n            className={classes.BottomBuffer}\n            required\n            variant=\"filled\"\n            error={this.state.invalidEmail}\n            onBlur={this.checkEmail}\n            label=\"Email Address\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor(\"email\")}\n            InputProps={{ classes: { root: classes.TextField } }}\n            inputProps={{ maxLength: 100, className: classes.TextField }}\n            InputLabelProps={{ style: { color: \"white\" } }}\n          />\n          <Grid\n            item\n            align=\"center\"\n            className={classes.LoginPage__buttonContainer}\n          >\n            <DynamicButton\n              type=\"glow\"\n              text=\"Send Link\"\n              handleClick={this.sendEmail}\n            />\n            <br/>\n            <DynamicButton\n              type=\"dark2\"\n              text=\"log in\"\n              handleClick={() =>\n                this.props.dispatch({ type: \"SET_TO_LOGIN_MODE\" })\n              }\n            />\n           \n            <DynamicButton\n              type=\"dark\"\n              text=\"New User\"\n              handleClick={() =>\n                this.props.dispatch({ type: \"SET_TO_REGISTER_MODE\" })\n              }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state\n});\n\nForgot.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(Forgot));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DynamicButton from \"../Buttons/DynamicButton\";\nimport { withRouter } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  BottomBuffer: {\n    marginBottom: \"1rem\",\n  },\n  LoginPage__buttonContainer: {\n    marginBottom: \"150px\",\n    position: \"relative\",\n    maxWidth: \"400px\",\n  },\n  LoginPage: {\n    color: \"white\",\n  },\n  LoginPage__title: {\n    fontSize: \"30px\",\n  },\n  LoginPage__subTitle: {\n    fontSize: \"20px\",\n    marginBottom: \"2rem\",\n  },\n  TextField: {\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    width: \"400px\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n});\n\nclass Reset extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    updated: false,\n    passwordErr: false,\n    confirmPasswordErr: false,\n    tooShortDialog: false,\n    mismatchDialog: false,\n    disableInput: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({ type: \"SET_TO_RESET_MODE\" })\n    //check if timeout has occured\n    const id = this.props.match.params.id \n    console.log('token = ', id);\n    this.props.dispatch({type: \"CHECK_TIMEOUT\", payload: id })\n  }\n\n\n  reset = (event) => {\n    event.preventDefault();\n    const password = this.state.password;\n    const token = this.props.match.params.id;\n    const dispatchPayload = {\n      password: password,\n      token: token,\n    }\n    console.log(`reset token: `, token);\n    if (password.length < 6 ) {\n      this.setState({\n        passwordErr: true,\n        tooShortDialog: true,\n      })\n    } else if (password !== this.state.confirmPassword){\n      this.setState({\n        confirmPasswordErr: true,\n        mismatchDialog: true,\n      })\n    } else {\n      this.props.dispatch({ type: \"UPDATE_PASSWORD\",  payload: dispatchPayload});\n      //this is where the route fires\n      this.setState({\n        updated: true,\n        passwordErr: false,\n        confirmPasswordErr: false,\n        disableInput: true,\n      })\n    }\n  }\n\n  loginButton = (event) => {\n    event.preventDefault();\n    this.props.dispatch({ type: \"SET_TO_LOGIN_MODE\" });\n    this.props.history.push('/home')\n  }\n\n  //input handler for all input fields\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      this.reset(event)\n    }\n  };\n\n  forgotButton = (event) => {\n    event.preventDefault();\n    this.props.dispatch({ type: \"SET_TO_FORGOT_MODE\" });\n    this.props.history.push('/home')\n  }\n\n  handleCloseModal = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n      {/* If timeone reached, error message below will render */}\n      { this.props.state.timeout?\n      \n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} className={classes.LoginPage} align=\"center\">\n            <h2 className={classes.LoginPage__title}>\n              Oops, your reset link has expired!{\" \"}\n            </h2>\n            <p className={classes.LoginPage__subTitle}>\n              Please click the button below and reenter your email address to request a new link:\n            </p>\n              <DynamicButton\n                type=\"glow\"\n                text=\"Get New Link\"\n                handleClick={this.forgotButton}\n              />\n            </Grid>\n          </Grid>\n        \n        :\n        <Grid container justify=\"center\" alignItems=\"center\">]\n        {/* Modal alerts user of mismatched passwords */}\n          <Dialog\n          open={this.state.mismatchDialog}\n          onClose={this.handleCloseModal(\"mismatchDialog\")}\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Oops, your passwords don't match!\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleCloseModal(\"mismatchDialog\")} color=\"primary\" autoFocus>\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* Modal alerts user of insecure password (too short) */}\n          <Dialog\n          open={this.state.tooShortDialog}\n          onClose={this.handleCloseModal(\"tooShortDialog\")}\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Oops, your password is too short!\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleCloseModal(\"tooShortDialog\")} color=\"primary\" autoFocus>\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Grid item xs={12} className={classes.LoginPage} align=\"center\">\n            <h2 className={classes.LoginPage__title}>\n              ZEF onboarding Password Reset{\" \"}\n            </h2>\n            <p className={classes.LoginPage__subTitle}>\n              Please enter a new password to be associated with your account:\n            </p>\n            <TextField\n              className={classes.BottomBuffer}\n              required\n              variant=\"filled\"\n              type=\"password\"\n              label=\"Password\"\n              name=\"password\"\n              disabled = {this.state.disableInput}\n              error = {this.state.passwordErr}\n              value={this.state.password}\n              onChange={this.handleInputChangeFor(\"password\")}\n              InputProps={{ classes: { root: classes.TextField } }}\n              inputProps={{ maxLength: 1000, className: classes.TextField }}\n              InputLabelProps={{ style: { color: \"white\" } }}\n              onKeyDown={this.handleKeyDown}\n            />\n            <br/>\n            <TextField\n              className={classes.BottomBuffer}\n              required\n              variant=\"filled\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              name=\"confirmPassword\"\n              error = {this.state.confirmPasswordErr}\n              disabled = {this.state.disableInput}\n              value={this.state.confirmPassword}\n              onChange={this.handleInputChangeFor(\"confirmPassword\")}\n              InputProps={{ classes: { root: classes.TextField } }}\n              inputProps={{ maxLength: 1000, className: classes.TextField }}\n              InputLabelProps={{ style: { color: \"white\" } }}\n              onKeyDown={this.handleKeyDown}\n            />\n            { this.state.updated?\n            <Grid\n              item\n              align=\"center\"\n              className={classes.LoginPage__buttonContainer}\n            >\n              <p className={classes.LoginPage__subTitle}>\n                Your password has been successfully reset! Please try logging in again:\n              </p>\n              <DynamicButton\n                type=\"glow\"\n                text=\"Sign in\"\n                handleClick={this.loginButton}\n              />\n            </Grid>\n            :\n            <Grid\n              item\n              align=\"center\"\n              className={classes.LoginPage__buttonContainer}\n            >\n              <DynamicButton\n                type=\"glow\"\n                text=\"Update password\"\n                handleClick={this.reset}\n              />\n            </Grid>\n            }\n          </Grid>\n        </Grid>\n      }\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nReset.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(connect(mapStateToProps)(Reset)));\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\nimport Forgot from \"../ForgotPass/Forgot\";\nimport Reset from \"../ForgotPass/Reset\";\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else if (loginMode === 'forgot') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'forgot', show the Forgot password page\n    ComponentToShow = Forgot;  \n  } else if (loginMode === 'reset') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'reset', show the Reset password page\n    ComponentToShow = Reset; \n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from \"react\";\nimport { Grid, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\nimport {\n  HomeWorkTwoTone,\n  EvStationTwoTone,\n  RoomTwoTone,\n  AccountCircleTwoTone,\n} from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  container: {\n    maxWidth: \"600px\",\n    marginBottom: \"100px\",\n    color: \"white\",\n  },\n  informationContainer: {\n    padding: \".5rem 0\",\n    maxWidth: \"530px\",\n    backgroundColor: \"#1c2447\",\n    border: \"1px solid white\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"inter Open Sans, sans-serif\",\n    marginBottom: \"1rem\",\n  },\n  requirementsUL: {\n    padding: \".5rem 0\",\n    textAlign: \"left\",\n    display: \"inline-block\",\n    listStyle: \"none\",\n  },\n  SvgIcon: {\n    transform: \"translate(0px, 5px)\",\n  },\n});\n\nclass WelcomeScreen extends Component {\n  componentDidMount() {\n    //push user to organizationHome instead if the've already added org info\n    if (this.props.reduxState.organization.id) {\n      this.props.history.push(\"/organizationHome\");\n    }\n  }\n\n  componentDidUpdate(previousProps) {\n    if (\n      previousProps.reduxState.organization.id !==\n      this.props.reduxState.organization.id\n    ) {\n      if (this.props.reduxState.organization.id) {\n        this.props.history.push(\"/organizationHome\");\n      }\n    }\n  }\n\n  // this component doesn't do much to start, just renders some user info to the DOM\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid item className={classes.container} align=\"center\">\n        <h1 className={classes.title} classes=\"BottomBuffer\">\n          Welcome to the ZEFNET EZ onboarding site!\n        </h1>\n        <div className={classes.informationContainer}>\n          Congratulations on installing your new ZEF charging devices!\n          <br />\n          To enter your new devices and users into our systems, we will need:\n          <div style={{ marginLeft: \"30px\", paddingBottom: '10px' }}>\n            <ul className={classes.requirementsUL}>\n              <li>\n                <HomeWorkTwoTone className={classes.SvgIcon} /> Basic information about your organization\n              </li>\n              <li>\n                <EvStationTwoTone className={classes.SvgIcon} /> Device details, including serial numbers\n              </li>\n              <li>\n                <RoomTwoTone className={classes.SvgIcon} /> Installation\n                location(s) and their breakers\n              </li>\n              <li>\n                <AccountCircleTwoTone className={classes.SvgIcon} /> Contact\n                information for admin employees\n              </li>\n            </ul>\n          </div>\n          We'll let you know what we need every step of the way. :)\n        </div>\n        <br />\n        <DynamicButton\n          type=\"glow\"\n          linkURL=\"/createOrganization\"\n          text=\"Let's Get Started\"\n        />\n      </Grid>\n    );\n  }\n}\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nWelcomeScreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(WelcomeScreen));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport PropTypes from \"prop-types\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\nconst styles = theme => ({\n  CreateOrganizationPage:{\n     paddingBottom: '75px',\n     color: 'white'\n  },\n  TextField: {\n    width: '400px',\n    '--text-color':'#fff',\n    '--dark-background':'#1C2447',\n    '--focus-background':'#244D6E',\n    color: 'var(--text-color)',\n    border: '1px solid var(--text-color)',\n    backgroundColor: 'var(--dark-background)',\n    caretColor:'var(--text-color)',\n    '&:focus':{\n      backgroundColor: 'var(--focus-background)'\n    },\n    '&:-webkit-autofill': {\n      WebkitBoxShadow: '0 0 0 40px var(--dark-background) inset',\n      '-webkit-text-fill-color': 'var(--text-color)',\n      '&:focus':{\n        WebkitBoxShadow: '0 0 0 30px var(--focus-background) inset',\n      }\n    },\n  },\n  Title: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    padding: '0px',\n    margin: '0px'\n  },\n  SubTitle: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    padding: '0px',\n    margin: '0px 0px .5rem 0px',\n    fontSize: '17px'\n  },\n  BottomBuffer: {\n    marginBottom: '.5rem'\n  },\n  LargeBottomBuffer: {\n    marginBottom: '1rem'\n  },\n  TopBottomBuffer: {\n    margin: '.5rem 0'\n  },\n})\n\nclass CreateOrganization extends Component {\n\n  state = {\n    organizationName: \"\",\n    primaryNumber: \"\",\n    email: \"\",\n    organizationAddress: \"\",\n    invalidEmail: false,\n  };\n\n\n  componentDidMount() {\n    //push user to organizationHome instead if the've already added org info\n    if (this.props.reduxState.organization.id) {\n      this.props.history.push(\"/organizationHome\");\n    }\n  }\n\n  //push user to organizationHome if the component updates after the screen is mounted\n  componentDidUpdate(previousProps) {\n    if (\n      previousProps.reduxState.organization.id !==\n      this.props.reduxState.organization.id\n    ) {\n      if (this.props.reduxState.organization.id) {\n        this.props.history.push(\"/organizationHome\");\n      }\n    }\n  }\n\n  //input handler for all input fields\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  //when 'create organization' is clicked, run post saga, and navigate to /organization home\n  handleAddOrg = () => {\n    const actionObject = {\n      organizationName: this.state.organizationName,\n      primaryNumber: this.state.primaryNumber,\n      organizationEmail: this.state.email,\n      organizationAddress: this.state.organizationAddress,\n      user_id: this.props.reduxState.user.id,\n      first_name: this.props.reduxState.user.first_name,\n      last_name: this.props.reduxState.user.last_name,\n      userEmail: this.props.reduxState.user.email,\n      phone: this.props.reduxState.user.phone,\n      editor: \"true\",\n      primary: \"true\",\n      invalidEmail: false,\n    };\n    this.props.dispatch({ type: \"ADD_ORGANIZATION\", payload: actionObject });\n    this.props.history.push(\"/organizationHome\");\n  };\n\n  handlePhoneNumberChange = (value) => {\n    this.setState({\n      primaryNumber: value,\n    });\n  };\n\n//validate email field\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        ...this.state,\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        invalidEmail: true,\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item className={classes.CreateOrganizationPage} align=\"center\">\n        <h1 className={classes.Title}>Organization Information</h1>\n        <p className={classes.SubTitle}>\n          This will help us associate the chargers with your organization.\n        </p>\n        <TextField\n          className={classes.TopBottomBuffer}\n          required\n          label=\"Organization / Company Name\"\n          variant=\"filled\"\n          value={this.state.organizationName || \"\"}\n          onChange={this.handleInputChangeFor(\"organizationName\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 100, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          className={classes.BottomBuffer}\n          required\n          label=\"Email\"\n          variant=\"filled\"\n          error={this.state.invalidEmail}\n          onBlur={this.checkEmail}\n          value={this.state.email || \"\"}\n          onChange={this.handleInputChangeFor(\"email\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 100, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          className={classes.LargeBottomBuffer}\n          required\n          label=\"Organization Address\"\n          variant=\"filled\"\n          value={this.state.organizationAddress || \"\"}\n          onChange={this.handleInputChangeFor(\"organizationAddress\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 500, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <MuiPhoneNumber\n          className={classes.BottomBuffer}\n          defaultCountry={\"us\"}\n          variant=\"filled\"\n          disableAreaCodes=\"true\"\n          label=\"Phone Number\"\n          margin=\"normal\"\n          type=\"tel\"\n          value={this.state.primaryNumber || \"\"}\n          onChange={this.handlePhoneNumberChange}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 30, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\", marginLeft: '50px' } }}\n        />\n        <br />\n        {/* conditional render enabled button if all required fields filled, and valid email */}\n        {this.state.email &&this.state.organizationAddress && this.state.organizationName && !this.state.invalidEmail?\n              <DynamicButton key = 'activeCreate' type='glow' text='Create Organization' handleClick={this.handleAddOrg}/>\n              :\n              <DynamicButton key = 'inactiveCreate' type='glow' text='Create Organization' isDisabled = {true}/>\n              }\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nCreateOrganization.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(CreateOrganization));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{Grid} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DynamicButton from '../Buttons/DynamicButton';\n\nconst styles = theme => ({\n  ViewOrgPage:{\n    color:'white',\n    fontSize: '17px',\n    marginBottom: '100px'\n  },\n  ViewOrgPage__title: {\n    marginBottom: '0',\n    textAlign: \"center\",\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    margin: '0',\n    padding: '0px'\n  },\n  ViewOrgPage__subTitle: {\n    fontWeight: 600,\n  },\n  ViewOrgPage__flexContainer__titles: {\n    fontWeight: 600,\n  },\n  ViewOrgPage__flexContainer__information: {\n    fontWeight: 300,\n  },\n  ViewOrgPage__flexContainer: {\n    display: 'flex',\n    flexDirection: 'row', \n    textAlign: 'left',\n    margin: '1rem 0'\n  },\n  LargeRightBuffer: {\n    marginRight: '1.5rem'\n  },\n  ViewOrgPage__buttonContainer: {\n    display: 'flex',\n    flexDirection:'row',\n    justifyContent:'space-between',\n    maxWidth: '180px',\n    marginTop: '1.5rem'\n  },\n  informationContainer: {\n    padding: \"2.5rem\",\n    maxWidth: \"530px\",\n    backgroundColor: \"#1c2447\",\n    border: \"1px solid white\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n    borderRadius: '5px'\n  },\n})\n\n\nclass ViewOrganization extends Component {\n\n  render() {\n    const {classes} = this.props;\n    return (\n          <Grid item align='center' className={classes.ViewOrgPage}>\n            <div className = {classes.informationContainer}>\n              <h1 className={classes.ViewOrgPage__title}>{this.props.reduxState.organization.name}</h1>\n              <p className={classes.ViewOrgPage__subTitle}>Organization Information</p>\n                <div className={classes.ViewOrgPage__flexContainer}>\n                  <div className={classes.LargeRightBuffer}>\n                    <p className={classes.ViewOrgPage__flexContainer__titles}>\n                      Email:\n                      <br/>Phone:\n                      <br/>Address:\n                    </p>\n                  </div>\n                  <div>\n                    <p className={classes.ViewOrgPage__flexContainer__information}>\n                      {this.props.reduxState.organization.email}\n                      <br/>{this.props.reduxState.organization.phone}\n                      <br/>{this.props.reduxState.organization.address}\n                    </p>\n                  </div>\n              </div>\n              <div className={classes.ViewOrgPage__buttonContainer}>\n                <DynamicButton type='edit-glow' text='Edit' linkURL='/editOrganization'/>\n                <DynamicButton type='home-glow' text='Home' linkURL='/organizationHome'/>\n              </div>\n              </div> \n        </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState\n});\n\nViewOrganization.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(ViewOrganization));\n\n\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {Grid, withStyles, Card,CardActionArea,CardMedia, GridListTileBar,} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport user from './Images/zefUser.jpeg';\nimport review from './Images/packageReview.jpeg';\nimport greyScaleReview from './Images/packageReviewGreyscale.jpeg';\nimport zefNetPro from '../Device/Images/zefpro.png'\nimport DynamicButton from '../Buttons/DynamicButton';\n\nconst styles = theme => ({ \n  CardContainer__inactiveCard:{\n    width: '300px',\n    border: '1px solid black',\n    margin: '0px 30px 25px 0px',\n    cursor: 'default'\n  },\n  CardContainer__activeCard: {\n    transition: 'transform .2s ease-in',\n    width: '300px',\n    border: '1px solid black',\n    margin: '0px 30px 25px 0px',\n    boxShadow: '0 22.3px 17.9px rgba(0, 0, 0, 0.042),0 41.8px 33.4px rgba(0, 0, 0, 0.05),0 100px 80px rgba(0, 0, 0, 0.07)',\n      '&:hover': {\n        transform: 'scale(1.02)',\n        boxShadow: '0 0 15px #c8ffff,-5px 0 20px #66fbfb, 5px 0 25px #049494',\n      }\n  },\n  CardContainer__activeCard__image: {\n    height: '300px',\n    width: '300px'\n  },\n  CardContainer__inactiveCard__image: {\n    height: '300px',\n    width: '300px'\n  },\n  HomeTitle: {\n    paddingTop: '40px',\n    color: 'white',\n    textAlign: 'center',\n  },\n  HomeSubTitle:{\n    color: 'white',\n    textAlign:'center',\n    fontSize: '18px'\n  },\n  HomeNavBar: {\n    backgroundColor: 'rgba(35, 40, 48, 0.699)',\n    minHeight: '57px',\n    minWidth: '100%',\n    position: 'absolute',\n    top: '0px',\n    left: '0px'\n  },\n  HomeNavBar__container:{\n    position:'absolute',\n    left: '25px',\n    minWidth: '97%'\n  },\n  CardContainer:{\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '1rem'\n  }\n})\n\n//this component can be viewed at /organizationHome\nclass HomeScreen extends Component {\n  //send user to /submit/completed component view if they have already submitted their onboarding app\n  componentDidMount(){\n    if(this.props.state.organization.status === 'submitted'){\n      this.props.history.push('/completed')\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <>\n      {/* Organization and Logout buttons */}\n\n        <Grid container alignItems='center' className={classes.HomeNavBar}>\n          <Grid item xs={12} className={classes.HomeNavBar__container}>\n            <DynamicButton type='organization' text={this.props.state.organization.name} linkURL='/viewOrganization'/>\n            <span style={{float: 'right'}}>\n              <DynamicButton type='logOut' text='Log Out' handleClick={() => this.props.dispatch({ type: 'LOGOUT' })}/>\n            </span>\n          </Grid>\n        </Grid>\n        \n        {/*Conditionally render Title message based upon number of added devices */}\n        {\n          this.props.state.allDevice.length < 1 ?\n              <h1 className={classes.HomeTitle}>Please add your device(s) and adminstrative users</h1>\n            :\n            <>\n              <h1 className={classes.HomeTitle}>Add any additional devices or adminstrative users</h1>\n              <p className={classes.HomeSubTitle}>Once finished click Review and Submit Information</p>\n            </>\n        }\n        \n        {/*Flexbox Card Container */}\n        <div className={classes.CardContainer}>\n              {/*Add Device Card*/}\n              <Card className={classes.CardContainer__activeCard}>\n                <CardActionArea component={Link} to=\"/devicePrep\" >\n                  <CardMedia\n                  image={zefNetPro}\n                  alt=\"ZEFNET Pro Charger\"\n                  title=\"Add a Device\" \n                  className={classes.CardContainer__activeCard__image} />\n                  <GridListTileBar\n                      title=\"Add a Device\"\n                      subtitle={\n                        this.props.state.allDevice.length < 1 ?\n                         '0 Devices currently added'\n                        :\n                        this.props.state.allDevice.length === 1 ?\n                         '1 Device currently added'\n                        :\n                        this.props.state.allDevice.length + ' Devices currently added'\n                      }\n                  />\n                  </CardActionArea>\n                </Card>\n\n              {/*Add Users Card*/}\n              <Card className={classes.CardContainer__activeCard}>\n              <CardActionArea component={Link} to=\"/addUser\">\n                <CardMedia\n                image={user}\n                alt=\"A Woman Laughing\"\n                title=\"Add a User\" \n                className={classes.CardContainer__activeCard__image} />\n                <GridListTileBar\n                  title=\"Add a User\"\n                  subtitle={\n                    this.props.state.zefUser.length < 1 ?\n                     '0 Users currently added'\n                    :\n                    this.props.state.zefUser.length === 1 ?\n                     '1 User currently added'\n                    :\n                    this.props.state.zefUser.length + ' Users currently added'\n                  }\n                />\n                </CardActionArea>\n              </Card>\n\n              {/*Render Active/Inactive Review Card based on added devices*/}\n              {\n                this.props.state.allDevice.length>0 ?\n                    <Card className={classes.CardContainer__activeCard}>\n                      <CardActionArea component={Link} to=\"/submit\">\n                        <CardMedia\n                        image={review}\n                        alt=\"A colored file binder\"\n                        title=\"Review and Submit Information\" \n                        className={classes['CardContainer__activeCard__image']} />\n                        <GridListTileBar\n                          title=\"Review and Submit Information\"\n                        />\n                        </CardActionArea>\n                      </Card>\n                      :\n                      <Card className={classes.CardContainer__inactiveCard}>\n                        <CardActionArea>\n                          <CardMedia\n                          image={greyScaleReview}\n                          alt=\"A colored file binder\"\n                          title=\"Review and Submit Information\" \n                          className={classes.CardContainer__inactiveCard__image} />\n                          <GridListTileBar\n                            title=\"Review and Submit Information\"\n                            subtitle='No devices are currently added'\n                          />\n                          </CardActionArea>\n                      </Card>\n                }\n          </div>\n        </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nHomeScreen.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(HomeScreen));","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\n\nconst styles = (theme) => ({\n  EditOrgPage: {\n    color: \"white\",\n    textAlign: \"center\",\n    marginBottom: \"100px\",\n  },\n  EditOrgPage__title: {\n    marginBottom: \"1rem\",\n  },\n  SmallBottomBuffer: {\n    marginBottom: \".5rem\",\n  },\n  LargeBottomBuffer: {\n    marginBottom: \"1.5rem\",\n  },\n  TextField: {\n    width: \"400px\",\n    \"--text-color\": \"#fff\",\n    \"--dark-background\": \"#1c2447\",\n    \"--focus-background\": \"#244d6e\",\n    color: \"var(--text-color)\",\n    border: \"1px solid var(--text-color)\",\n    backgroundColor: \"var(--dark-background)\",\n    caretColor: \"var(--text-color)\",\n    \"&:focus\": {\n      backgroundColor: \"var(--focus-background)\",\n    },\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 40px var(--dark-background) inset\",\n      \"-webkit-text-fill-color\": \"var(--text-color)\",\n      \"&:focus\": {\n        WebkitBoxShadow: \"0 0 0 30px var(--focus-background) inset\",\n      },\n    },\n  },\n});\n\n//this component is routed at /editOrganization\nclass EditOrganization extends Component {\n  state = {\n    organizationName: this.props.reduxState.organization.name,\n    primaryNumber: this.props.reduxState.organization.phone,\n    email: this.props.reduxState.organization.email,\n    organizationAddress: this.props.reduxState.organization.address,\n    invalidEmail: false,\n  };\n\n  //input change handler for all input fields\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  //run the edit organization saga when save changes is clicked and reset state\n  handleEditOrg = () => {\n    const actionObject = {\n      organizationName: this.state.organizationName,\n      primaryNumber: this.state.primaryNumber,\n      email: this.state.email,\n      organizationAddress: this.state.organizationAddress,\n      id: this.props.reduxState.organization.id,\n    };\n    this.props.dispatch({ type: \"EDIT_ORGANIZATION\", payload: actionObject });\n    this.setState({\n      organizationName: this.props.reduxState.organization.organizationName,\n      primaryNumber: this.props.reduxState.organization.primaryNumber,\n      email: this.props.reduxState.organization.email,\n      organizationAddress: this.props.reduxState.organization\n        .organizationAddress,\n    });\n  };\n\n  handlePhoneNumberChange = (value) => {\n    this.setState({\n      primaryNumber: value,\n    });\n  };\n\n//check that email is valid\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        invalidEmail: true,\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item align=\"center\" className={classes.EditOrgPage}>\n        <h1 className={classes.EditOrgPage__title}>\n          Edit Organization Information\n        </h1>\n        <TextField\n          autoFocus\n          label=\"Organization Name\"\n          required\n          variant=\"filled\"\n          className={classes.SmallBottomBuffer}\n          value={this.state.organizationName}\n          onChange={this.handleInputChangeFor(\"organizationName\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 100, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <TextField\n          required\n          label=\"Primary Email\"\n          variant=\"filled\"\n          error={this.state.invalidEmail}\n          onBlur={this.checkEmail}\n          value={this.state.email || \"\"}\n          className={classes.SmallBottomBuffer}\n          onChange={this.handleInputChangeFor(\"email\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 100, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        <MuiPhoneNumber\n          defaultCountry={\"us\"}\n          variant=\"filled\"\n          disableAreaCodes=\"true\"\n          label=\"Primary Phone (optional)\"\n          name=\"phone\"\n          type=\"tel\"\n          value={this.state.primaryNumber || \"\"}\n          className={classes.SmallBottomBuffer}\n          onChange={this.handlePhoneNumberChange}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 30, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\", marginLeft: '50px'} }}\n        />\n        <br />\n        <TextField\n          required\n          label=\"Organization Address\"\n          variant=\"filled\"\n          value={this.state.organizationAddress}\n          className={classes.LargeBottomBuffer}\n          onChange={this.handleInputChangeFor(\"organizationAddress\")}\n          InputProps={{ classes: { root: classes.TextField } }}\n          inputProps={{ maxLength: 500, className: classes.TextField }}\n          InputLabelProps={{ style: { color: \"white\" } }}\n        />\n        <br />\n        {/* conditional render enabled button if all required fields filled, and valid email */}\n        {this.state.email &&this.state.organizationAddress && this.state.organizationName && !this.state.invalidEmail?\n              \n        <DynamicButton\n          key = 'activeSave'\n          type=\"glow\"\n          text=\"Save Changes\"\n          linkURL=\"/viewOrganization\"\n          handleClick={this.handleEditOrg}\n        />\n        :\n        <DynamicButton key = 'inactiveSave' type='glow' text='Save Changes' isDisabled = {true}/>\n        }\n      </Grid>\n    );\n  }\n}\n\n// map full reduxState to props\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\n//include classes on props\nEditOrganization.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// connect this component to the app \nexport default withStyles(styles)(connect(mapStateToProps)(EditOrganization));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{ Button, TextField, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles, } from '@material-ui/core/styles';\nimport { Dialog, DialogActions, DialogContent, DialogContentText}from '@material-ui/core/';\n\nconst styles = theme => ({ \n    minorPadding: {\n      padding: '0px 10px'\n    },\n    error:{\n      backgroundColor: '#ef9a9a',\n    }\n  })\n\n  \n\nclass AddSite extends Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    address: '',\n    error: false,\n  };\n  handleChange = (event) => {\n    this.setState({ \n        ...this.state,\n        [event.target.name]: event.target.value });\n  };\n\n  addSite = () => {\n      //post new site to site table\n      const postObject = {\n          first_name: this.state.first_name,\n          second_name: this.state.last_name,\n          email: this.state.email,\n          phone: this.state.phone,\n          address: this.state.address,\n          organization_id: this.props.state.organization.id,\n      }\n      if (postObject.organization_id && postObject.first_name && postObject.address && postObject.email)\n        {this.props.dispatch({ type: \"POST_SITE\", payload: postObject });\n        this.props.handleClose()\n        } else {\n            //reveal error message\n            this.setState({\n              ...this.state,\n              error:true,\n            })\n        }\n  }\n  \n  handleClose = () =>{\n    this.setState({\n      ...this.state,\n      error:false\n    })\n  }\n\n  render() {\n     const {classes} = this.props;\n    return (\n      <div>\n        <Dialog style={{textAlign: 'center'}}\n          open={this.props.open} \n          onClose={this.props.handleClose}\n          title='Add A New Host Site'>\n          {this.state.error&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n              Unable to add site. Please fill all required fields.\n                <Button onClick = {this.handleClose}>OK</Button>\n              </h2>\n            </Grid>}\n         <h1 style={{padding: '15px 0px 10px 0px', margin: '0px'}}>New Host Site</h1>\n         <p style={{padding: '0px', margin: '0px', fontWeight: '500', fontSize: '16px'}}>Enter the location of the organization's charging device.</p>\n          <DialogContent style={{marginTop: '0px', paddingTop: '0px'}}>\n            <TextField\n              autoFocus\n              className={classes.minorPadding}\n              required\n              variant = 'filled'\n              margin=\"dense\"\n              label='Host Site Address'\n              type=\"address\"\n              fullWidth\n              name='address'\n              value={this.state.address}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 500}}\n            />\n            <p style={{textAlign: 'left', margin: '0px 0px 15px 10px'}}>\n              *Address does <strong>NOT</strong>  have to be your organization's primary address.\n            </p>\n              \n              \n   \n            <h3 style={{margin:'5px', padding: '0px'}}>\n              Primary Contact Information for Host Site\n            </h3>\n            <TextField\n              className={classes.minorPadding}\n              required\n              fullWidth\n              variant='filled'\n              margin=\"dense\"\n              label=\"First Name\"\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 50}}\n            />\n            <TextField\n              className={classes.minorPadding}\n              fullWidth\n              variant='filled'\n              margin=\"dense\"\n              label=\"Last Name\"\n              name=\"last_name\"\n              value={this.state.last_name}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 100}}\n            />\n            <TextField\n            className={classes.minorPadding}\n            variant='filled'\n            margin=\"dense\"\n            label=\"Phone Number\"\n            type='tel'\n            fullWidth\n            name='phone'\n            value={this.state.phone}\n            onChange={this.handleChange}\n            inputProps={{maxLength: 30}}\n          />\n            <TextField  \n              className={classes.minorPadding}\n              required\n              variant='filled'\n              margin=\"dense\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 100}}\n            />\n            <DialogContentText style={{marginTop: '5px'}}>\n              You may repeat this process if you have multiple sites.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions style={{textAlign: 'left'}}>\n            <Button onClick={this.props.handleClose} style={{float: 'left'}}>\n                Close\n            </Button>\n            <Button color=\"primary\"\n                onClick = {this.addSite}>\n             Add Site\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    state,\n  });\n  \n  AddSite.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \nexport default withStyles(styles)(connect(mapStateToProps)(AddSite));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{ Button, TextField, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles, } from '@material-ui/core/styles';\nimport { Dialog, DialogActions, DialogContent, DialogContentText}from '@material-ui/core/';\n\nconst styles = theme => ({ \n    minorPadding: {\n      padding: '0px 10px'\n    },\n    error:{\n      backgroundColor: '#ef9a9a',\n    }\n  })\n\n  \n\nclass EditSite extends Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    address: '',\n    error: false,\n  };\n\n    componentDidUpdate(previousProps) {\n    // this will run every time the props change - \n    //and possibly in addition to this, so we need to check for prop changes\n        if (this.props.site !== previousProps.site) {\n            this.setState({\n            first_name: this.props.site.first_name,\n            last_name: this.props.site.second_name,\n            email:this.props.site.email,\n            phone: this.props.site.phone,\n            address:this.props.site.address,\n            error:false,\n            })   \n        }  \n    }\n\n\n  handleChange = (event) => {\n    this.setState({ \n        ...this.state,\n        [event.target.name]: event.target.value });\n  };\n\n  editSite = () => {\n      //update existing site in site table\n      const editObject = {\n          first_name: this.state.first_name,\n          second_name: this.state.last_name,\n          email: this.state.email,\n          phone: this.state.phone,\n          address: this.state.address,\n          id:this.props.site.id,\n          organization_id: this.props.state.organization.id,\n      }\n      // run the edit saga if required fields filled\n      if (editObject.id && editObject.first_name && editObject.address && editObject.email)\n        {this.props.dispatch({ type: \"EDIT_SITE\", payload: editObject });\n        this.props.handleClose()\n        } else {\n            //reveal error message\n            this.setState({\n              ...this.state,\n              error:true,\n            })\n        }\n  }\n  \n  handleClose = () =>{\n    this.setState({\n      ...this.state,\n      error:false\n    })\n  }\n\n  handleCloseWithoutSave = () =>{\n    this.setState({\n        first_name: this.props.site.first_name,\n        last_name: this.props.site.second_name,\n        email:this.props.site.email,\n        phone: this.props.site.phone,\n        address:this.props.site.address,\n        error:false,\n        })  \n    this.props.handleClose()\n}\n\n  render() {\n     const {classes} = this.props;\n    return (\n      <div>\n        <Dialog style={{textAlign: 'center'}}\n          open={this.props.open} \n          onClose={this.props.handleClose}\n          title='Edit Existing Host Site'>\n          {this.state.error&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n              Unable to update site. Please fill all required fields.\n                <Button onClick = {this.handleClose}>OK</Button>\n              </h2>\n            </Grid>}\n         <h1 style={{padding: '15px 0px 10px 0px', margin: '0px'}}>Edit Host Site</h1>\n         <p style={{padding: '0px', margin: '0px', fontWeight: '500', fontSize: '16px'}}>Enter the location of the organization's charging device.</p>\n          <DialogContent style={{marginTop: '0px', paddingTop: '0px'}}>\n            <TextField\n              autoFocus\n              className={classes.minorPadding}\n              required\n              variant = 'filled'\n              margin=\"dense\"\n              label='Host Site Address'\n              type=\"address\"\n              fullWidth\n              name='address'\n              value={this.state.address}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 500}}\n            />\n            <p style={{textAlign: 'left', margin: '0px 0px 15px 10px'}}>\n              *Address does <strong>NOT</strong>  have to be your organization's primary address.\n            </p>\n              \n              \n   \n            <h3 style={{margin:'5px', padding: '0px'}}>\n              Primary Contact Information for Host Site\n            </h3>\n            <TextField\n              className={classes.minorPadding}\n              required\n              fullWidth\n              variant='filled'\n              margin=\"dense\"\n              label=\"First Name\"\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 50}}\n            />\n            <TextField\n              className={classes.minorPadding}\n              fullWidth\n              variant='filled'\n              margin=\"dense\"\n              label=\"Last Name\"\n              name=\"last_name\"\n              value={this.state.last_name}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 100}}\n            />\n            <TextField\n            className={classes.minorPadding}\n            variant='filled'\n            margin=\"dense\"\n            label=\"Phone Number\"\n            type='tel'\n            fullWidth\n            name='phone'\n            value={this.state.phone}\n            onChange={this.handleChange}\n            inputProps={{maxLength: 30}}\n          />\n            <TextField  \n              className={classes.minorPadding}\n              required\n              variant='filled'\n              margin=\"dense\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n              inputProps={{maxLength: 100}}\n            />\n            <DialogContentText style={{marginTop: '5px'}}>\n              Updated site information will appear with all associated devices\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions style={{textAlign: 'left'}}>\n            <Button onClick={this.handleCloseWithoutSave} style={{float: 'left'}}>\n                Close Without Saving \n            </Button>\n            <Button color=\"primary\"\n                onClick = {this.editSite}>\n             Save Changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    state,\n  });\n  \n  EditSite.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \nexport default withStyles(styles)(connect(mapStateToProps)(EditSite));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{Grid, Select, Paper, InputLabel, FormControl, MenuItem} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles, } from '@material-ui/core/styles';\nimport AddSite from './Add';\nimport DynamicButton from '../../Buttons/DynamicButton';\nimport EditSite from './Edit';\n\nconst styles = theme => ({ \n  paper:{\n    padding: theme.spacing(2),\n    borderRadius: '5px',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '350px',\n  },\n  grow:{\n      flexGrow: 1\n  },\n  hrWordDivder: {\n    width: '90%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    margin: '0px 0px 35px 0px' \n },\n  hrWord: { \n     background: '#fff',\n     padding:'0px 10px',\n }\n})\n\n\nclass HostSelect extends Component {\n  state = {\n    selectedSite: '',\n    open: false,\n    edit: false,\n    fullSiteInfo:{},\n  };\n\n  componentDidMount = ()=> {\n    if( this.props.state.device.site.id ){\n      this.setState({\n        ...this.state,\n        selectedSite: this.props.state.device.site.id\n      })\n    } \n  } \n\n  addSite = () => {\n      this.setState ({\n          ...this.state,\n          open: true,\n      })\n  }\n\n  handleClose = () => {\n    this.setState ({\n        ...this.state,\n        open: false,\n        edit: false,\n    })\n}\n\n  editSite = () => {\n    let allSite = this.props.state.site\n      for (let i = 0; i < allSite.length; i++ ){\n        if (allSite[i].id === this.state.selectedSite){\n          this.setState({\n            ...this.state,\n            edit: true,\n            fullSiteInfo: allSite[i],\n          })\n        }\n      }\n  \n  }\n\n  handleChange =  (event) => {\n    this.setState({\n      selectedSite: event.target.value,\n    });\n  }\n\n  componentDidUpdate(previousProps){\n   //if site was reacently added to the breaker reducer, check through the org's sites, and make sure it \n   //exists, then set it to state if it does!\n   if(previousProps.state.site !== this.props.state.site){\n      if( this.props.state.device.site.id ){\n        for (let i = 0; i <this.props.state.site.length; i++)\n          {  \n            if (this.props.state.site[i].id === this.props.state.device.site.id ){\n                this.setState({\n                  ...this.state,\n                  selectedSite: this.props.state.device.site.id,\n                  //breakers: this.props.state.breaker.siteBreakerReducer\n                })\n            }\n          }\n      }\n    } \n  }\n\n  assignSite = () => {\n    //check if this site isn't already saved in the breaker reducer. if it is,\n    //moce it to there and dispatch breakers!\n    if (this.state.selectedSite !== this.props.state.device.site.id ){\n      let allSite = this.props.state.site\n      let mySite = []\n      for (let i = 0; i < allSite.length; i++ ){\n        if (allSite[i].id === this.state.selectedSite){\n          mySite.push(allSite[i]);\n        }\n      }\n    this.props.dispatch({type: 'SET_DEVICE_SITE', payload: mySite[0]})\n    this.props.dispatch({type: 'FETCH_SITE_BREAKERS', payload: this.state.selectedSite})\n    }\n  }\n\n  render() {\n    const {classes} = this.props; \n    return (\n      \n          <Grid item style={{maxWidth: '800px'}} align='center'>\n          <AddSite handleClose = {this.handleClose} open = {this.state.open}/>\n          <EditSite handleClose = {this.handleClose} open = {this.state.edit} site={this.state.fullSiteInfo}/>\n            <Paper className = {classes.paper} elevation = {3}>\n                <h1>Select Your Host Site</h1>\n                <div style={{marginBottom: '20px'}}> \n                <p style={{margin: 'auto 40px'}}>\n                    Please choose from existing below or click the 'Add Site' button.\n                    </p>   \n                </div>\n                <Grid container direction = 'row' justify = 'center' alignItems = 'center'>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                      <InputLabel>Choose From Existing Sites</InputLabel>\n                      <Select\n                      id = 'siteSelect'\n                      value={this.state.selectedSite}\n                      onChange={this.handleChange}\n                      >\n                      <MenuItem value=\"\">\n                          <em>None of these</em>\n                      </MenuItem>\n                      {this.props.state.site.map((site, index)=>\n                      (<MenuItem value={site.id||''} key = {index}>{site.address}</MenuItem>)\n                      )}\n                      </Select>\n                    </FormControl>\n                  {\n                    this.state.selectedSite ?\n                      <div>\n                        <DynamicButton type='edit' text='Edit' handleClick={this.editSite}/>\n                      </div>\n                    :<DynamicButton type='edit' text='Edit' isDisabled = {true}/>\n                  }  \n                 </Grid>       \n                <br/>\n                <br/>\n                <h2 className={classes.hrWordDivder}><span className={classes.hrWord}>Or</span></h2>    \n                    <DynamicButton key='addSite-button-enabled' type='add' text='Add Site' handleClick={this.addSite}/>     \n                <br/>\n                <br/>\n                <Grid container direction = 'row'>\n                    <DynamicButton type='previous' text='Previous' linkURL='/devicePrep'/>\n                    <div className = {classes.grow}></div>\n                    {this.state.selectedSite ?\n                        <DynamicButton key={'enabled-site-next'} type='next' text='Next' handleClick={this.assignSite} linkURL='/breakerSelect'/>\n                      :\n                        <DynamicButton key={'disabled-site-next'} type='next' text='Next' isDisabled={true}/>\n                    }\n                </Grid>\n            </Paper>\n            </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nHostSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(HostSelect));\n\n\n","import React, { Component } from 'react';\nimport {Grid, withStyles, GridListTileBar} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport zefNetPro from './Images/zefpro.png';\nimport wallmount from './Images/wallMount.jpg';\nimport single from './Images/singleheadped.jpg';\nimport double from './Images/dualheadped.jpg';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport DynamicButton from '../Buttons/DynamicButton';\n\nconst styles = theme => ({ \n  card: {\n    transition: 'all .2s ease-in-out',\n    maxWidth: '2500px',\n    width: '250px',\n    border: '1px solid black',\n    margin: '0px 30px 25px 0px',\n    boxShadow: '0 2.8px 2.2px rgba(0, 0, 0, 0.02), 0 6.7px 5.3px rgba(0, 0, 0, 0.028),0 12.5px 10px rgba(0, 0, 0, 0.035),0 22.3px 17.9px rgba(0, 0, 0, 0.042),0 41.8px 33.4px rgba(0, 0, 0, 0.05),0 100px 80px rgba(0, 0, 0, 0.07)',\n                '&:hover': {transform: 'scale(1.07)',boxShadow: '0 0 15px #c8ffff,-5px 0 20px #66fbfb, 5px 0 25px #049494',}\n  },\n  media: {\n    height: '250px',\n    width: '250px'\n  },\n})\n\nclass DeviceSelectType extends Component {\n\n setTypeReducer = (id, img, name) => {\n  this.props.dispatch({ type: \"SET_TYPE\", payload: {id,img,name} });\n  this.props.history.push('/deviceSerial')\n}\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <Grid container justify='center' alignContent='center' alignItems='center'>\n        {/*Title */}\n        <Grid item xs={12} align='center'>\n          <h1 style={{color:'white',marginBottom: '30px'}}>Please Select Your Charging Device Type</h1>\n        </Grid>\n      \n        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center'}}>\n              {/*Wall Mount Device Card*/}\n              <Card className={classes.card}>\n                <CardActionArea onClick={()=>{this.setTypeReducer(1,'./Images/wallMount.jpg','Wall Mount Charger')}}\n                   component = {Link} to =\"/deviceSerial\"\n                >\n                  <CardMedia\n                  image={wallmount}\n                  title=\"Wall Mount Charger\" \n                  className={classes.media} />\n                  <GridListTileBar\n                      title=\"Wall Mount Charger\"\n                  />\n                  </CardActionArea>\n                </Card>\n    \n              {/*Single Head Device Card*/}\n              <Card className={classes.card}>\n                <CardActionArea onClick={()=>{this.setTypeReducer(2,'./Images/singleheadped.jpg','Single Head Pedestal Charger')}}\n                  component = {Link} to =\"/deviceSerial\">\n                  <CardMedia\n                  image={single}\n                  title=\"Single Head Pedestal Charger\" \n                  className={classes.media} />\n                  <GridListTileBar\n                      title=\"Single Head Pedestal Charger\"\n                  />\n                  </CardActionArea>\n              </Card>\n    \n              {/*Dual Head Device Card*/}\n              <Card className={classes.card}>\n                <CardActionArea onClick={()=>{this.setTypeReducer(3,'./Images/dualheadped.jpg','Dual Head Pedestal Charger')}} \n                  component = {Link} to =\"/deviceSerial\">\n                    <CardMedia\n                      image={double}\n                      title=\"Double Head Pedestal Charger\" \n                      className={classes.media} />\n                    <GridListTileBar\n                        title=\"Double Head Pedestal Charger\"\n                    />\n                  </CardActionArea>\n              </Card>\n            \n                {/*ZEFNET Pro Device Card*/}\n                <Card className={classes.card}>\n                  <CardActionArea onClick={()=>{this.setTypeReducer(4,'./Images/zefpro.png','ZEFNET Pro Charger')}}\n                    component = {Link} to =\"/deviceSerial\">\n                    <CardMedia\n                    image={zefNetPro}\n                    title=\"ZEFNET Pro Charger\" \n                    className={classes.media} />\n                    <GridListTileBar\n                        title=\"ZEFNET Pro Charger\"\n                    />\n                    </CardActionArea>\n                </Card>\n        </div>\n\n        {/*Previous Button*/}\n        <Grid item align='center' xs={12}>\n          <DynamicButton type='previous' text='Previous' linkURL='/breakerSelect'/>\n        </Grid>\n\n      </Grid>\n\n    );\n  }\n}\n\nDeviceSelectType.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(DeviceSelectType));","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { \n   Grid,\n   Paper, \n   TextField, \n   withStyles, \n   Divider,\n   Dialog,\n   DialogActions,\n   DialogContent,\n   DialogContentText,\n   Button,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport user from \"./Images/serial.png\";\nimport DynamicButton from '../Buttons/DynamicButton';\nimport zefpro from \"./Images/zefproArrow.png\";\nimport {Link} from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n  borderedBox: {\n    border: \"solid #e3e3e3 3px\",\n    maxWidth: \"515px\",\n    height: \"150px\",\n    display: \"flex\",\n    borderRadius: \"5px\",\n  },\n  image: {\n    maxHeight: \"145px\",\n    maxWidth: \"145px\",\n  },\n  centerFont: {\n    paddingLeft: \"10px\",\n    textAlign: \"center\",\n    color: \"black\",\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    maxWidth: \"inherit\",\n  },\n  form: {\n    background: \"transparent\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    padding: \"0px\",\n  },\n  buttonDiv: {\n    display: \"flex\",\n    width: \"515px\",\n    justifyContent: \"space-between\",\n    align: \"center\",\n    marginTop: \"20px\",\n  },\n  textField: {\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    width: \"400px\",\n  },\n});\n\nclass DeviceSerial extends Component {\n  state = {\n    serialNumber: \"\",\n    confirmSerialNumber: \"\",\n    serialNumber2: \"\",\n    confirmSerialNumber2: \"\",\n    open: false,\n  };\n\n  componentDidMount = () => {\n    if (this.props.reduxState.device.serial !== {}) {\n      this.setState({\n        serialNumber: this.props.reduxState.device.serial.number,\n        confirmSerialNumber: this.props.reduxState.device.serial.number,\n        serialNumber2: this.props.reduxState.device.serial2,\n        confirmSerialNumber2: this.props.reduxState.device.serial2,\n        open: false,\n      });\n    }\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  handleNext = () => {\n    // open dialog if the user is creating a new device and adding a serial that already exists\n    const allDevice = this.props.reduxState.allDevice;\n    let match = 0\n    if (this.props.reduxState.device.id === \"\" ){\n        for (let i = 0; i <allDevice.length; i++){\n          if ((allDevice[i].serial_number === (this.state.serialNumber ||this.state.serialNumber2))\n          ||(allDevice[i].serial_number2 === (this.state.serialNumber ||this.state.serialNumber2))){\n            this.setState({\n              ...this.state,\n              open: true\n            })\n            match++;\n          }\n        }\n      }\n    //if user is editing an existing device and trying to set the serial number to one that \n    //isnt associated with this device throw the same error\n    // if serial number(s) match their confirmation number(s), set the number to \n    //redux state.device.serial and advance to device name\n  if(match === 0)\n    { if (\n        this.state.serialNumber === this.state.confirmSerialNumber &&\n        this.state.serialNumber !== \"\"\n      ) {\n        const actionObject = {\n          number: this.state.serialNumber,\n          user_id: this.props.reduxState.user.id,\n        };  \n          if (\n            this.state.serialNumber2 === this.state.confirmSerialNumber2 &&\n            this.state.serialNumber2 !== \"\"\n          ) {\n            \n            this.props.dispatch({ type: \"SET_SERIAL2\", payload: this.state.serialNumber2 });\n          } \n        this.props.dispatch({ type: \"SET_SERIAL\", payload: actionObject });\n        this.props.history.push(\"/deviceName\");\n      } else {\n        this.setState({...this.state, open: true});\n      }}\n    \n  };\n\n  handleCopynPaste = (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item xs={12} style={{ maxWidth: \"1000px\" }} align=\"center\">\n        {/* Dialog runs if adding new device with existing serial number */}\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"existing-serial\"\n          aria-describedby=\"serial-number-already-created\"\n          >\n              <DialogContent>\n                  <DialogContentText id=\"serial-number-already-created\">\n                      Oops, a device with that serial has already been added to your list of devices!\n                      Do you want to go back and change the serial number(s) on this device or discard\n                      your current changes and review your existing devices?\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                  Change Serial Number\n              </Button>\n              <Button component = {Link} to = '/submit'>\n                  Discard changes and review devices.\n              </Button>\n              </DialogActions>\n          </Dialog>\n        <Paper className={classes.paper} elevation={3}>\n          <div className={classes.borderedBox}>\n            {this.props.reduxState.device.type.id === 4?\n            <>\n              <img\n                src={zefpro}\n                alt={this.props.reduxState.device.type.name}\n                className={classes.image}\n              />\n              <div>\n                <h1 className={classes.centerFont}>ZEFNET Pro Serial</h1>\n                <h3 className={classes.centerFont}>\n                Serial number can be found on the name plate on the bottom left hand corner of the ZEFNET Pro.\n                </h3>\n              </div>\n            </>\n            :\n            <>\n              <img\n                src={user}\n                alt={this.props.reduxState.device.type.name}\n                className={classes.image}\n              />\n              <div>\n                <h1 className={classes.centerFont}>Input your Serial Number</h1>\n                <h3 className={classes.centerFont}>\n                  Serial Number can be found on the sticker on the left-hand side\n                  of the unit. It begins with 'HC1C'\n                </h3>\n              </div>\n          </>\n          }\n          </div>\n          <form className={classes.form}>\n            <TextField\n              required\n              style={{ margin: \"25px auto 0px auto\" }}\n              className={classes.textField}\n              label=\"Serial Number:\"\n              margin=\"normal\"\n              placeholder=\"HC1C190987067\"\n              variant=\"filled\"\n              value={this.state.serialNumber || \"\"}\n              onChange={this.handleInputChangeFor(\"serialNumber\")}\n              onCopy={this.handleCopynPaste}\n              onPaste={this.handleCopynPaste}\n              inputProps={{maxLength: 100}}\n            />\n            <TextField\n              required\n              style={{ margin: \"10px auto 0px auto\" }}\n              className={classes.textField}\n              label=\"Confirm Serial Number:\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.confirmSerialNumber || \"\"}\n              onChange={this.handleInputChangeFor(\"confirmSerialNumber\")}\n              onCopy={this.handleCopynPaste}\n              onPaste={this.handleCopynPaste}\n              inputProps={{maxLength: 100}}\n            />\n            <br/>\n            {/* conditionally render second serial number inputs if\n            device is dual head pedestal model */}\n            {this.props.reduxState.device.type.id === 3&&\n            <>\n              <Divider/>\n              <h2>Input Second Serial Number</h2>\n              <h4>Dual Head Pedestal models have a serial number in the same location on each head</h4>\n              <TextField\n                required\n                style={{ margin: \"25px auto 0px auto\" }}\n                className={classes.textField}\n                label=\"Second Serial Number:\"\n                margin=\"normal\"\n                variant=\"filled\"\n                value={this.state.serialNumber2 || \"\"}\n                onChange={this.handleInputChangeFor(\"serialNumber2\")}\n                onCopy={this.handleCopynPaste}\n                onPaste={this.handleCopynPaste}\n                inputProps={{maxLength: 100}}\n              />\n              <TextField\n                required\n                style={{ margin: \"10px auto 0px auto\" }}\n                className={classes.textField}\n                label=\"Confirm Second Serial Number:\"\n                margin=\"normal\"\n                variant=\"filled\"\n                value={this.state.confirmSerialNumber2 || \"\"}\n                onChange={this.handleInputChangeFor(\"confirmSerialNumber2\")}\n                onCopy={this.handleCopynPaste}\n                onPaste={this.handleCopynPaste}\n                inputProps={{maxLength: 100}}\n              />\n              <br/>\n            </>}\n            <div className={classes.buttonDiv}>\n                <DynamicButton type='previous' text='Previous' linkURL='/deviceType'/>\n                {\n                  this.state.serialNumber\n                  &&this.state.serialNumber !== this.state.serialNumber2 \n                  && this.state.serialNumber === this.state.confirmSerialNumber \n                  &&((this.state.serialNumber2 === this.state.confirmSerialNumber2 && this.state.serialNumber2)\n                  || this.props.reduxState.device.type.id !==3\n                  )? \n                  <DynamicButton key='serial-enabled-next' type='next' text='Next' handleClick={this.handleNext}/>\n                  : \n                  <DynamicButton key='serial-disabled-next' type='next' text='Next' isDisabled={true}/>\n                }\n            </div>\n          </form>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nDeviceSerial.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(DeviceSerial));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Paper,\n  withStyles,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Button,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport zefNetPro from \"./Images/zefpro.png\";\nimport wallMount from \"./Images/wallMountStylized.jpg\";\nimport singleHead from \"./Images/singleHeadStylized.jpg\";\nimport dualHead from \"./Images/dualHeadStylized.jpg\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\nconst styles = (theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n  borderedBox: {\n    border: \"solid #e3e3e3 3px\",\n    maxWidth: \"515px\",\n    height: \"150px\",\n    display: \"flex\",\n    borderRadius: \"5px\",\n  },\n  image: {\n    maxHeight: \"145px\",\n    maxWidth: \"145px\",\n  },\n  centerFont: {\n    paddingLeft: \"15px\",\n    textAlign: \"center\",\n    color: \"black\",\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    maxWidth: \"inherit\",\n  },\n  form: {\n    background: \"transparent\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    padding: \"0px\",\n  },\n  buttonDiv: {\n    display: \"flex\",\n    width: \"515px\",\n    justifyContent: \"space-between\",\n    align: \"center\",\n    marginTop: \"20px\",\n  },\n  textField: {\n    fontFamily: \"Inter, Open Sans, sans-serif\",\n    width: \"400px\",\n  },\n});\n\n//component can be viewed at /deviceName\nclass DeviceName extends Component {\n  state = {\n    chargerName: \"\",\n    installationDate: \"\",\n    open: false,\n  };\n\n  componentDidMount = () => {\n    if (this.props.reduxState.device.name !== \"\") {\n      this.setState({\n        ...this.state,\n        chargerName: this.props.reduxState.device.name,\n        installationDate: this.props.reduxState.device.date,\n      });\n    }\n  };\n\n  chooseDeviceImage = () => {\n    let deviceImage;\n    switch (this.props.reduxState.device.type.id) {\n      case 1:\n        deviceImage = wallMount;\n        break;\n      case 2:\n        deviceImage = singleHead;\n        break;\n      case 3:\n        deviceImage = dualHead;\n        break;\n      case 4:\n        deviceImage = zefNetPro;\n        break;\n      default:\n        deviceImage = dualHead;\n    }\n    return deviceImage;\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleNext = () => {\n    if (this.state.chargerName && this.state.installationDate !== \"\") {\n      this.props.dispatch({\n        type: \"SET_NAME\",\n        payload: this.state.chargerName,\n      });\n      this.props.dispatch({\n        type: \"SET_DATE\",\n        payload: this.state.installationDate,\n      });\n\n      this.props.history.push(\"/deviceReview\");\n    } else {\n      this.setState({ ...this.state, open: true });\n    }\n  };\n\n  handlePrevious = () => {\n    this.props.history.push(\"/deviceSerial\");\n  };\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid item xs={12} style={{ maxWidth: \"1000px\" }} align=\"center\">\n        {/* Dialog runs if clicked review Device without name and date filled */}\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"missing-info\"\n          aria-describedby=\"device-name-and-date-required\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"device-name-and-date-required\">\n              Oops! Please enter both a name and installation date for your\n              device\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Paper className={classes.paper} elevation={3}>\n          <div className={classes.borderedBox}>\n            <div>\n              <img\n                src={this.chooseDeviceImage()}\n                className={classes.image}\n                alt={this.props.reduxState.device.type.name}\n              />\n              {/* Image changes based on device type */}\n            </div>\n\n            <div>\n              <div>\n                <h1 className={classes.centerFont}>Name your Device</h1>\n              </div>\n              <div>\n                <h3 className={classes.centerFont}>\n                  Good names should be short, memorable, and descriptive.\n                </h3>\n              </div>\n            </div>\n          </div>\n          <form className={classes.form}>\n            <div>\n              <TextField\n                required\n                style={{ margin: \"25px auto 0px auto\" }}\n                className={classes.textField}\n                label=\"Charger Name:\"\n                margin=\"normal\"\n                variant=\"filled\"\n                value={this.state.chargerName || \"\"}\n                onChange={this.handleInputChangeFor(\"chargerName\")}\n                inputProps={{maxLength: 100}}\n              />\n            </div>\n\n            <div>\n              <TextField\n                required\n                type=\"Date\"\n                style={{ margin: \"10px auto 0px auto\" }}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n                value={this.state.installationDate || \"\"}\n                onChange={this.handleInputChangeFor(\"installationDate\")}\n                label = 'Installation Date'\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </div>\n            <div className={classes.buttonDiv}>\n              <DynamicButton\n                type=\"previous\"\n                text=\"Previous\"\n                linkURL=\"/deviceSerial\"\n              />\n              {/* conditionally render active button if name and date fields filled */}\n              {this.state.chargerName && this.state.installationDate ? \n                <DynamicButton\n                  key={\"name-enabled-next\"}\n                  type=\"review\"\n                  text=\"Review Device\"\n                  handleClick={this.handleNext}\n                />\n              : \n                <DynamicButton\n                  key={\"name-disabled-next\"}\n                  type=\"review\"\n                  text=\"Review Device\"\n                  isDisabled={true}\n                />\n              }\n            </div>\n          </form>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\n//map readux state to this.props.reduxState\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nDeviceName.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(DeviceName));\n","import React, { Component } from 'react';\nimport {Grid, Paper, withStyles, GridList, GridListTile, GridListTileBar} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport map from './Images/7LLX9.jpg';\nimport breaker from './Images/breaker2.jpg';\nimport serial from './Images/serial.png';\nimport device from './Images/dualHeadStylized.jpg';\nimport DynamicButton from '../Buttons/DynamicButton';\n\nconst styles = theme => ({ \n  paper:{\n    padding: theme.spacing(2),\n    borderRadius: '5px',\n  },\n  gridListTile: {\n    color: 'rgba(255, 255, 255, 0.54)',\n    maxWidth: '300px',\n    maxHeight: '300px',\n    margin: '15px 15px 0px 0px'\n  },\n  image: {\n    maxHeight: '350px',\n    minWidth: '350px'\n  },\n  grow:{\n    flexGrow: 1,\n    minWidth: '100px'\n  },\n})\n\n\nclass DevicePrep extends Component {\n\n  render() {\n    const {classes} = this.props;\n    return (\n                <Grid item style={{maxWidth: '1375px', marginBottom: '35px'}} align='center'>\n                    <Paper className = {classes.paper}>\n                        <h1>Before you start make sure you have the following information on hand</h1>\n                        <Grid container justify='center' alignContent='center' alignItems='center'>\n                        <GridList cellHeight={300}>\n                            {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                            <GridListTile className={classes.gridListTile}>\n                                <img src={map} alt=\"address\" className={classes.image} />\n                                <GridListTileBar\n                                    title=\"Device Host Site Address\"\n                                />\n                            </GridListTile>\n                            <GridListTile className={classes.gridListTile}>\n                                <img src={breaker} alt=\"breaker\" className={classes.image} />\n                                <GridListTileBar\n                                    title=\"Breaker Location and Limit(Amps)\" \n                                />\n                            </GridListTile>\n                            <GridListTile className={classes.gridListTile}>\n                                <img src={device} alt=\"ZEFNET Pro Charger\" className={classes.image}/>\n                                <GridListTileBar\n                                    title=\"Device Type\"\n                                />\n                            </GridListTile>\n                            <GridListTile className={classes.gridListTile} style={{marginRight: '0px'}}>\n                                <img src={serial} alt=\"Serial Number\" className={classes.image} />\n                                <GridListTileBar\n                                    title=\"Serial Number\"\n                                />\n                            </GridListTile>\n                        </GridList>\n                        </Grid>\n                        <br/>\n                        <Grid container direction = 'row' justify = 'center' alignContent = 'center'>\n                            <DynamicButton type='home' text='Home' linkURL='/OrganizationHome'/>\n                            <div className = {classes.grow}>{'\\u00A0'}</div>\n                            <DynamicButton type='next' text='Next' linkURL='/hostSelect'/>\n                        </Grid>\n                    </Paper>\n                </Grid>\n    );\n  }\n}\n\nDevicePrep.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DevicePrep);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{ Button, TextField, InputAdornment } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles, } from '@material-ui/core/styles';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, Grid }from '@material-ui/core/';\n\nconst styles = theme => ({ \n    error:{\n      backgroundColor: '#ef9a9a',\n    }\n})\n\nclass AddBreaker extends Component {\n  state = {\n    name: '',\n    description: '',\n    limit: '',\n    alert1: false,\n    alert2: false,\n  };\n\n  //input change handler\n  handleChange = (event) => {\n    this.setState({ \n        ...this.state,\n        [event.target.name]: event.target.value });\n  };\n\n  handleClose1 = () =>{\n    this.setState({\n      ...this.state,\n      alert1:false\n    })\n  }\n\n  handleClose2 = () =>{\n    this.setState({\n      ...this.state,\n      alert2:false\n    })\n  }\n\n  \n  addBreaker = () => {\n      //post new breaker if a site id is associated with this breaker\n      if (this.props.state.device.site.id){\n        const postObject = {\n            name: this.state.name,\n            description: this.state.description,\n            limit: this.state.limit,\n            site_id: this.props.state.device.site.id,\n        }\n        if (postObject.site_id && postObject.name && postObject.limit)\n            {this.props.dispatch({ type: \"POST_BREAKER\", payload: postObject });\n            //reset state\n            this.setState({\n              name: '',\n              description: '',\n              limit: '',\n              alert1: false,\n              alert2: false,\n            })\n            this.props.handleClose()\n            } else {\n              this.setState({...this.state, alert1: true});\n            }\n      } else {\n         this.setState({...this.state, alert2: true});\n      }\n  }\n\n\n  render() {\n     const {classes} = this.props;\n    return (\n      <div>\n        <Dialog style={{textAlign: 'center'}}\n          title='Add a New Breaker'\n          open={this.props.open} \n          onClose={this.props.handleClose}>\n          {/* Alert 1 visible if not all fields filled when add is clicked */}\n          {this.state.alert1&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n                  Unable to add breaker. Please pick a name and limit for your breaker.\n                <Button onClick = {this.handleClose1}>OK</Button>\n              </h2>\n            </Grid>}\n            {/* alert 2 visible if no site id exists to associate with this breaker (usually happens when user refreshes on breaker page) */}\n            {this.state.alert2&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n                  Oops! no site is currently selected. Please exit this field and select a site from the previous page!\n                <Button onClick = {this.handleClose2}>OK</Button>\n              </h2>\n            </Grid>}\n          <h1 style={{padding: '15px 0px 0px 0px', margin: '0px'}}>Add a New Breaker</h1>\n          <DialogContent style={{padding: '0px auto'}}>\n            <DialogContentText>\n              Please name the breaker in a way to provide quick and easy identification. \n              This should indicate where an engineer would go to isolate or reboot the device manually.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              required\n              fullWidth\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Name\"\n              name = 'name'\n              value = {this.state.name}\n              placeholder = \"South East Utility Room: Panel 2B: Breaker 22/24\"\n              onChange = {this.handleChange}\n              inputProps={{\n                maxLength: 50\n              }}\n            />\n            <TextField\n              required\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Limit\"\n              type=\"number\"\n              fullWidth\n              name = 'limit'\n              value = {this.state.limit}\n              onChange = {this.handleChange}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Amps</InputAdornment>,\n              }}\n            />\n            <h3 style={{margin:'10px 0px 5px 0px', padding: '0px'}}>\n              If additional information is beneficial,\n               <br/>please fill in the description field below.\n            </h3>\n            <TextField\n              fullWidth\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Description\"\n              rows=\"4\"\n              name = \"description\"\n              placeholder= \"The South East Utility Room is located on the second floor across from the admin office.  The breaker panels are on the North wall.\"\n              multiline\n              value={this.state.description}\n              onChange = {this.handleChange}\n              inputProps={{maxLength: 300}}\n            />   \n            <DialogContentText style={{marginTop: '5px'}}>\n              You can complete this process multiple times for your selected site.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.handleClose}>\n                Close\n            </Button>\n            <Button color=\"primary\"\n                onClick = {this.addBreaker}>\n             Add Breaker\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    state,\n  });\n  \n  AddBreaker.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \nexport default withStyles(styles)(connect(mapStateToProps)(AddBreaker));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport{ Button, TextField, InputAdornment } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles, } from '@material-ui/core/styles';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, Grid }from '@material-ui/core/';\n\nconst styles = theme => ({ \n    error:{\n      backgroundColor: '#ef9a9a',\n    }\n})\n  \n\nclass EditBreaker extends Component {\n  state = {\n    name: '',\n    description: '',\n    limit: '',\n    alert1: false,\n    alert2: false,\n  };\n\n    componentDidUpdate(previousProps) {\n    // this will run every time the props change - \n    //and possibly in addition to this, so we need to check for prop changes\n        if (this.props.breaker !== previousProps.breaker) {    \n            this.setState({\n            name: this.props.breaker.name,\n            limit: this.props.breaker.limit,\n            description:this.props.breaker.description,\n            alert1: false,\n            alert2: false,\n            })   \n        }  \n    }\n\n    handleExit = () =>{\n        this.setState({\n            name: this.props.breaker.name,\n            limit: this.props.breaker.limit,\n            description:this.props.breaker.description,\n            alert1: false,\n            alert2: false,\n            })  \n        this.props.handleClose();\n    }\n\n  handleChange = (event) => {\n    this.setState({ \n        ...this.state,\n        [event.target.name]: event.target.value });\n  };\n\n  handleClose1 = () =>{\n    this.setState({\n      ...this.state,\n      alert1:false\n    })\n  }\n\n  handleClose2 = () =>{\n    this.setState({\n      ...this.state,\n      alert2:false\n    })\n  }\n\n    editBreaker = () => {\n      //post new site to site table\n      if (this.props.state.device.site.id){\n        const editObject = {\n            name: this.state.name,\n            description: this.state.description,\n            limit: this.state.limit,\n            site_id: this.props.state.device.site.id,\n            id: this.props.breaker.id,\n        }\n        if (editObject.site_id && editObject.name && editObject.limit)\n            {this.props.dispatch({ type: \"EDIT_BREAKER\", payload: editObject });\n            this.props.handleClose()\n            } else {\n              this.setState({...this.state, alert1: true});\n            }\n      } else {\n         this.setState({...this.state, alert2: true});\n      }\n  }\n\n\n  render() {\n     const {classes} = this.props;\n    return (\n      <div>\n        <Dialog style={{textAlign: 'center'}}\n          title='Edit Existing Breaker'\n          open={this.props.open} \n          onClose={this.props.handleClose}>\n          {this.state.alert1&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n              Unable to update breaker. Please pick a name and limit for your breaker.\n                <Button onClick = {this.handleClose1}>OK</Button>\n              </h2>\n            </Grid>}\n            {this.state.alert2&&\n            <Grid container direction = 'row' justify='center' alignContent='center'>\n              <h2 className = {classes.error}>\n              Oops! no site is currently selected. Please exit this field and select a site from the previous page!\n                <Button onClick = {this.handleClose2}>OK</Button>\n              </h2>\n            </Grid>}\n          <h1 style={{padding: '15px 0px 0px 0px', margin: '0px'}}>Edit Existing Breaker</h1>\n          <DialogContent style={{padding: '0px auto'}}>\n            <DialogContentText>\n              Please name the breaker in a way to provide quick and easy identification. \n              This should indicate where an engineer would go to isolate or reboot the device manually.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              required\n              fullWidth\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Name\"\n              name = 'name'\n              value = {this.state.name}\n              inputProps={{\n                maxLength: 50\n              }}\n              placeholder = \"South East Utility Room: Panel 2B: Breaker 22/24\"\n              onChange = {this.handleChange}\n            />\n            <TextField\n              required\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Limit\"\n              type=\"number\"\n              fullWidth\n              name = 'limit'\n              value = {this.state.limit}\n              onChange = {this.handleChange}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Amps</InputAdornment>,\n              }}\n            />\n            <h3 style={{margin:'10px 0px 5px 0px', padding: '0px'}}>\n              If additional information is beneficial,\n               <br/>please fill in the description field below.\n            </h3>\n            <TextField\n              fullWidth\n              variant = 'filled'\n              margin=\"dense\"\n              label=\"Breaker Description\"\n              rows=\"4\"\n              name = \"description\"\n              placeholder= \"The South East Utility Room is located on the second floor across from the admin office.  The breaker panels are on the North wall.\"\n              multiline\n              value={this.state.description}\n              onChange = {this.handleChange}\n              inputProps={{maxLength: 300}}\n            />   \n            <DialogContentText style={{marginTop: '5px'}}>\n              Updated breaker information will appear with all associated devices\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick = {this.handleExit}>\n                Close Without Saving\n            </Button>\n            <Button color=\"primary\"\n                onClick = {this.editBreaker}>\n                Save Changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    state,\n  });\n  \n  EditBreaker.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n  \nexport default withStyles(styles)(connect(mapStateToProps)(EditBreaker));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid, Select, Paper, InputLabel, FormControl, MenuItem} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AddBreaker from './Add';\nimport DynamicButton from '../../Buttons/DynamicButton';\nimport EditBreaker from './Edit';\n\n\nconst styles = theme => ({\n    paper:{\n        padding: theme.spacing(2),\n        borderRadius: '5px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: '350px',\n\n    },\n    grow: {\n        flexGrow: 1\n    },\n    hrWordDivder: {\n        width: '90%',\n        textAlign: 'center',\n        borderBottom: '1px solid #000',\n        lineHeight: '0.1em',\n        margin: '0px 0px 35px 0px' \n     },\n      hrWord: { \n         background: '#fff',\n         padding:'0px 10px',\n     },\n     BottomBuffer: {\n         marginBottom: '1rem'\n     }\n})\n\nclass BreakerSelect extends Component {\n\n    state = {\n        breakers: this.props.state.breaker.siteBreakerReducer,\n        selectedBreaker: '',\n        open: false,\n        edit: false,\n        fullBreakerInfo:{},\n      };\n      \n      componentDidMount = ()=> {\n        for (let i = 0; i <this.props.state.breaker.siteBreakerReducer.length; i++)\n        {  \n            if  (this.props.state.breaker.siteBreakerReducer[i].id === this.props.state.device.breaker.id ){\n                this.setState({\n                    ...this.state,\n                    selectedBreaker: this.props.state.device.breaker.id,\n                    breakers: this.props.state.breaker.siteBreakerReducer\n                })\n            }\n        }\n      } \n\n      componentDidUpdate(previousProps){\n          if(previousProps.state.breaker.siteBreakerReducer !== this.props.state.breaker.siteBreakerReducer){\n             for (let i = 0; i <this.props.state.breaker.siteBreakerReducer.length; i++)\n                {  \n                    if  (this.props.state.breaker.siteBreakerReducer[i].id === this.props.state.device.breaker.id ){\n                        this.setState({\n                            ...this.state,\n                            selectedBreaker: this.props.state.device.breaker.id,\n                        })\n                    }\n                }\n          }\n      }\n\n      editBreaker = () => {\n        let allBreaker = this.props.state.breaker.siteBreakerReducer\n          for (let i = 0; i < allBreaker.length; i++ ){\n            if (allBreaker[i].id === this.state.selectedBreaker){\n              this.setState({\n                ...this.state,\n                edit: true,\n                fullBreakerInfo: allBreaker[i],\n              })\n            }\n          }\n      \n      }\n    \n      addBreaker = () => {\n          this.setState ({\n              ...this.state,\n              open: true,\n          })\n      }\n    \n      handleClose = () => {\n        this.setState ({\n            ...this.state,\n            open: false,\n            edit: false,\n        })\n    }\n    \n      handleChange =  (event) => {\n        this.setState({\n          selectedBreaker: event.target.value,\n        });\n      }\n    \n      assignBreaker = () => {\n        let allBreaker = this.props.state.breaker.siteBreakerReducer;\n        let myBreaker = []\n        if(this.state.selectedBreaker){\n            for (let i = 0; i < allBreaker.length; i++ ){\n                if (allBreaker[i].id === this.state.selectedBreaker){\n                myBreaker.push(allBreaker[i]);\n                }\n            }\n                this.props.dispatch({type: 'SET_BREAKER', payload: myBreaker[0]})\n        }\n      }\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <Grid item style={{maxWidth: '800px'}} align='center'>\n            <AddBreaker handleClose = {this.handleClose} open = {this.state.open}/>\n            <EditBreaker handleClose = {this.handleClose} open = {this.state.edit} breaker={this.state.fullBreakerInfo}/>\n                <Paper className={classes.paper} elevation={3}>\n                    <h1>Select Your Breaker for the Device</h1>\n                    <div className={classes.BottomBuffer}>\n                        <p style={{margin: 'auto 40px'}}>\n                            Please choose from existing below or press the 'Add Breaker' button.\n                        </p>   \n                    </div>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'center'>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                        <InputLabel>Choose From Existing</InputLabel>\n                        <Select\n                            value={this.state.selectedBreaker}\n                            onChange={this.handleChange}\n                            label=\"Breaker\"\n                        >\n                        <MenuItem value=\"\">\n                            <em>None of these</em>\n                        </MenuItem>\n                        {/*Map out all breakers stored in reducer*/}\n            \n                        {\n                            this.props.state.breaker.siteBreakerReducer.map((breaker, index)=>\n                            <MenuItem value={breaker.id} key={breaker.id}>\n                                <span style={{backgroundColor: '#b2ff59'}}>limit:{'\\u00A0'}{breaker.limit}Amps </span> \n                                {'\\u00A0'}{'\\u00A0'}{breaker.name}\n                            </MenuItem>\n                        )}\n                        </Select>\n                    </FormControl>\n                    {\n                        this.state.selectedBreaker?\n                            <div>\n                                <DynamicButton type='edit' text='Edit' handleClick={this.editBreaker}/>\n                            </div>\n                        :<DynamicButton type='edit' text='Edit' isDisabled = {true}/>\n                    }\n                    </Grid>\n                    <br/>\n                    <br/>\n                    <h2 className={classes.hrWordDivder}><span className={classes.hrWord}>Or</span></h2>\n                    <DynamicButton key='addBreaker-button-enabled' type='add' text='Add Breaker' handleClick={this.addBreaker}/>   \n                    <br/>\n                    <br/>\n                    <Grid container direction='row'>\n                        <DynamicButton type='previous' text='Previous' linkURL='/hostSelect'/>\n                        <div className={classes.grow}></div>\n                        {/*Conditionally render the Next button as clickable/disabled based on if a breaker is selected*/}\n                        {\n                            this.state.selectedBreaker ?\n                                <DynamicButton key='breaker-enabled-next'\n                                    type='next' text='Next' linkURL='/deviceType' handleClick={this.assignBreaker}/>\n\n                        :\n                                <DynamicButton key='breaker-disabled-next'\n                                    type='next' text='Next' isDisabled={true}/>\n                        }\n                    </Grid>\n                </Paper>\n            </Grid>\n)\n    }\n}\n\nconst mapStateToProps = state => ({\n    state\n});\n\nBreakerSelect.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles) (connect(mapStateToProps)(BreakerSelect));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {Grid, Paper, withStyles, Dialog, DialogActions, DialogContent, DialogContentText, Button} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport DynamicButton from '../Buttons/DynamicButton';\n\nconst styles = theme => ({ \n  Paper:{\n    padding: theme.spacing(2),\n    borderRadius: '5px',\n  },\n  Left:{\n    width: '75px'\n  },\n  ButtonContainer:{\n    marginTop: '1rem',\n    position: 'relative',\n    minWidth: '95%'\n  },\n  Titles: {\n    fontWeight: 800,\n  },\n  Information: {\n    fontWeight: 300,\n    display: 'inline-block',\n    wordBreak: 'break-word'\n  },\n  InformationMarginBottom: {\n    fontWeight: 300,\n    marginBottom: '5px'\n  },\n  FlexContainerColumn: {\n    display: 'flex',\n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'left',\n    width: '350px',\n    padding: '1rem 1.5rem 1rem 0',\n  },\n  CenterText: {\n      textAlign: 'center'\n  }\n})\n\nclass DeviceReview extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: \"GET_SERIAL_NUMBERS\" });\n      }\n\n    state =  {\n        missingField: false,\n        repeatedSerial: false,\n    }\n\n    saveDevice = () => {\n        const serialArray = this.props.state.allSerial\n        const postObject = {\n            name: this.props.state.device.name,\n            installation_date: this.props.state.device.date,\n            serial_number: this.props.state.device.serial.number,\n            serial_number2: this.props.state.device.serial2,\n            type_id: this.props.state.device.type.id,\n            breaker_id:this.props.state.device.breaker.id,\n            org_id:this.props.state.organization.id,\n            id: this.props.state.device.id,     \n        };\n        // call saga that posts the new device if required fields filled\n        if(postObject.name && postObject.installation_date\n            && postObject.serial_number && postObject.type_id \n            && postObject.breaker_id)\n        {    //post the new device, or update if navigated here from submit page\n                if ( postObject.id ) {\n                    this.props.dispatch({ type: \"UPDATE_DEVICE\", payload: postObject });\n                } else{\n                    //throw an error if the serial number already exists in the DB\n                    if ( (serialArray.includes(postObject.serial_number)) ||\n                         (serialArray.includes(postObject.serial_number2)) ) {\n                        this.setState({repeatedSerial: true})\n                        return;\n                    } else {\n                        this.props.dispatch({ type: \"ADD_DEVICE\", payload: postObject });        \n                    }\n                }\n                this.props.dispatch({ type: \"CLEAR_DEVICE\" });\n                this.props.history.push(\"/OrganizationHome\");\n        } else { this.setState({missingField: true}) }\n    }\n\n    handleCloseModal = (propertyName) => (event) => {\n        this.setState({\n          [propertyName]: false,\n        });\n      };\n\n    render() {\n      const {classes} = this.props;\n      return (\n          <Grid container direction='row' justify='center' alignContent='center' alignItems='center' >\n              {/* Dialog runs if adding/saving device without all required info */}\n                <Dialog\n                open={this.state.missingField}\n                onClose={this.handleCloseModal(\"missingField\")}\n                aria-labelledby=\"missing-information\"\n                aria-describedby=\"missing-information-required-for-device\"\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"missing-required-information-use-edit-buttons-to-add\">\n                            Oops, you have not filled all required fields for this device. \n                            Please click \"edit\" next to the empty field to go back and add\n                            required information before saving this device.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleCloseModal(\"missingField\")} color=\"primary\">\n                        OK\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n                 {/* Dialog runs if adding device with non-unique serial number */}\n                 <Dialog\n                open={this.state.repeatedSerial}\n                onClose={this.handleCloseModal(\"repeatedSerial\")}\n                aria-labelledby=\"missing-information\"\n                aria-describedby=\"missing-information-required-for-device\"\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"missing-required-information-use-edit-buttons-to-add\">\n                        oops! This serial number is already associated with a device in our system. \n                        You may only use this tool to onboard a new device with a unique serial number.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleCloseModal(\"repeatedSerial\")} color=\"primary\">\n                        OK\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            <Paper className = {classes.Paper}>\n                <Grid item align='center'>\n                    <h1 style={{marginBottom: '20px'}}>Let's make sure all this information is correct!</h1>\n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                    <div className = {classes.Left}/>                  \n                        <h2>Hosting Location</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/hostSelect'/>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} align='center' style={{backgroundColor: 'lightgrey'}}>\n                        <div className={classes.FlexContainerColumn}>\n                            <div className={classes.CenterText}>\n                                <p className={classes.Titles}>\n                                    Address:\n                                </p>\n                                <p className={classes.Information}>\n                                    {this.props.state.device.site.address}\n                                </p>\n                            </div>\n                        </div>                    \n                </Grid>\n                    \n                <Grid item align='center' xs={12}>\n                    <h2>Local Contact for Location</h2>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                First Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {this.props.state.device.site.first_name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Second Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {this.props.state.device.site.second_name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Phone Number:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {this.props.state.device.site.phone}\n                            </p>\n                            <p className={classes.Titles}>\n                                Email Address:\n                            </p>\n                            <p className={classes.Information}>\n                                {this.props.state.device.site.email}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n                \n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Breaker Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/breakerSelect'/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                \n                <div className={classes.FlexContainerColumn}>\n                    <div className={classes.CenterText}>\n                        <p className={classes.Titles}>\n                            Breaker Name:\n                        </p>\n                        <p className={classes.InformationMarginBottom}>\n                            {this.props.state.device.breaker.name}\n                        </p>\n                        <p className={classes.Titles}>\n                            Breaker Limit:\n                        </p>\n                        <p  className={classes.InformationMarginBottom}>\n                            {this.props.state.device.breaker.limit}\n                        </p>\n                        <p className={classes.Titles}>\n                            Breaker Description:\n                        </p>\n                        <p className={classes.Information}>\n                            {this.props.state.device.breaker.description}\n                        </p>\n                    </div>\n                </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Device Type</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceType'/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                Device Type:\n                            </p>\n                            <p className={classes.Information}>\n                                {this.props.state.device.type.name}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction='row' alignItems='center' justify='space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Device Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceSerial'/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            {this.props.state.device.serial2 ?\n                                <>\n                                    <p className={classes.Titles}>Serial Number One:</p>\n                                    <p className={classes.InformationMarginBottom}>{this.props.state.device.serial.number}</p>\n                                    <p className={classes.Titles}>Serial Number Two:</p>\n                                    <p className={classes.Information}>{this.props.state.device.serial2}</p>\n                                </>\n                                :\n                                <>\n                                    <p className={classes.Titles}>Serial Number:</p>\n                                    <p className={classes.Information}>{this.props.state.device.serial.number}</p>\n                                </>\n                            }\n                        </div>\n                    </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Additional Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceName'/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                Charger Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {this.props.state.device.name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Installation Date:\n                            </p>\n                            <p className={classes.Information}>\n                                {this.props.state.device.date}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n\n                <Grid item align='center' className={classes.ButtonContainer}>\n                    <div style={{position: 'absolute', float: 'Left'}}>\n                        <DynamicButton type='previous' text='Previous' linkURL='/deviceName'/>\n                    </div>\n                       {this.props.state.device.id?\n                       <DynamicButton key = 'savebutton' type='confirm' text='Save Device Changes' handleClick={this.saveDevice}/> \n                       :\n                       <DynamicButton key = 'addbutton' type='confirm' text='Add This Device' handleClick={this.saveDevice}/> \n                        }\n                </Grid>\n            </Paper> \n          </Grid>\n      );\n    }\n  }\n  \n  DeviceReview.propTypes = {\n      classes: PropTypes.object.isRequired,\n  };\n\n  const mapStateToProps = state => ({\n      state\n  })\n  \n  export default withStyles(styles)(connect(mapStateToProps)(DeviceReview));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    withStyles, \n    TextField,\n    IconButton,\n    TableRow,\n    TableCell,\n    Select,\n    MenuItem,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Button,\n    DialogContentText,\n    Tooltip\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Delete, Edit, SaveAlt, Close} from \"@material-ui/icons\";\n\nconst styles = (theme) => ({\n    TableRow:{\n        overflowX: 'scroll',\n        whiteSpace:'nowrap',\n        maxWidth: '1000px',\n        height: '50px'\n    },\n    ViewCell:{\n        maxWidth: '200px',\n        overflow: 'scroll',\n        minWidth: '100px',\n        fontSize: '16px',\n        padding: '2px 6px'\n    },\n    EditCell:{\n        maxWidth: '200px',\n        overflow: 'scroll',\n        minWidth: '100px',\n        padding: '0px'\n    },\n});\n\nclass UserTableRow extends Component{\n    state = {\n        first_name: this.props.first_name,\n        last_name: this.props.last_name,\n        email: this.props.email,\n        phone: this.props.phone,\n        edit_mode: false,\n        editor: this.props.editor,\n        organization_id: this.props.state.organization.id,\n        open: false\n      };\n      \n      handleChange = (event) => {\n        this.setState({ \n            ...this.state,\n            [event.target.name]: event.target.value });\n      };\n\n      handleDelete = () => {\n        this.props.dispatch({ type: \"DELETE_ZEFUSER\", payload: {id:this.props.user_id, organization_id: this.state.organization_id}});\n        this.handleClose();\n      };\n\n      handleClickOpen = () => {\n        this.setState({ ...this.state, open: true });\n      };\n    \n      handleClose = () => {\n        this.setState({ ...this.state, open: false });\n      };\n\n      cancelEdit = () => {\n          this.setState({ \n            first_name: this.props.first_name,\n            last_name: this.props.last_name,\n            email: this.props.email,\n            phone: this.props.phone,\n            edit_mode: false,\n            editor: this.props.editor,\n            organization_id: this.props.state.organization.id,\n            open: false})\n         this.props.viewMode();\n      }\n\n\n      handleEdit = () => {\n           //set edit mode state in parent component as well\n        if(this.state.edit_mode){\n            this.props.viewMode();\n        }else{ this.props.editMode();\n        }\n        const changesMade= \n            this.state.first_name !== this.props.first_name ||\n            this.state.last_name !== this.props.last_name ||\n            this.state.email !== this.props.email || \n            this.state.phone !== this.props.phone || \n            this.state.editor !== this.props.editor;\n\n        this.setState({ edit_mode: !this.state.edit_mode }, ()=>{\n            if(changesMade){\n                const actionObject = {\n                    first_name: this.state.first_name,\n                    last_name: this.state.last_name,\n                    email: this.state.email,\n                    phone: this.state.phone,\n                    editor: this.state.editor,\n                    id: this.props.user_id,\n                    organization_id: this.props.state.organization.id,\n                    };\n               this.props.dispatch({ type: \"UPDATE_ZEFUSER\", payload: actionObject});  \n            }\n        })\n      };\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"confirm-delete\"\n                aria-describedby=\"confirm-delete-user\"\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"are-you-sure-delete-user\">\n                            Are you sure you want to delete {this.state.first_name} from the user table?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Oops, no.\n                    </Button>\n                    <Button onClick={this.handleDelete} color=\"primary\" autoFocus>\n                        Yes, delete!\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n                    <TableRow hover className={classes.TableRow} inputProps={classes.TableRow}>\n                        <TableCell className={classes.ViewCell}>\n                            {\n                                this.state.edit_mode ?\n                                <>\n                                <Tooltip title='Save'>\n                                    <IconButton onClick={this.handleEdit}>\n                                        <SaveAlt/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title='Cancel'>\n                                    <IconButton onClick={this.cancelEdit}>\n                                        <Close />\n                                    </IconButton>\n                                </Tooltip>\n                                </>\n                                :\n                                <>\n                                <Tooltip title='Edit'>\n                                    <IconButton onClick={this.handleEdit}>\n                                        <Edit/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title='Delete'>\n                                    <IconButton onClick={this.handleClickOpen}>\n                                        <Delete />\n                                    </IconButton>\n                                </Tooltip>\n                                </>\n                            }\n                        </TableCell>\n                        {!this.state.edit_mode ?\n                            <>\n                                <TableCell className={classes.ViewCell}>{this.state.first_name}</TableCell>\n                                <TableCell className={classes.ViewCell}>{this.state.last_name}</TableCell>\n                                <TableCell className={classes.ViewCell}>{this.state.email}</TableCell>\n                                <TableCell className={classes.ViewCell}>{this.state.phone}</TableCell>\n                                <TableCell className={classes.ViewCell}>{this.state.editor ? \"Edit\" : \"View\"}</TableCell>\n                            </>\n                            :\n                            <>\n                                <TableCell className={classes.ViewCell}>\n                                    <TextField className={classes.EditCell}\n                                        variant = 'filled'\n                                        value={this.state.first_name}\n                                        name='first_name'\n                                        onChange={this.handleChange}\n                                        inputProps={{maxLength: 50}}\n                                        required/>\n                                </TableCell>\n                                <TableCell className={classes.ViewCell}>\n                                    <TextField \n                                        variant = 'filled'\n                                        value={this.state.last_name}\n                                        name='last_name'\n                                        onChange={this.handleChange}\n                                        inputProps={{maxLength: 100}}\n                                        required/>\n                                </TableCell>\n                                <TableCell className={classes.ViewCell}>\n                                    <TextField \n                                        variant = 'filled'\n                                        value={this.state.email}\n                                        name='email'\n                                        onChange={this.handleChange}\n                                        inputProps={{maxLength: 100}}\n                                        required/>\n                                </TableCell>\n                                <TableCell className={classes.ViewCell}>\n                                    <TextField \n                                        variant = 'filled'\n                                        value={this.state.phone}\n                                        name='phone'\n                                        onChange={this.handleChange}\n                                        inputProps={{maxLength: 30}}\n                                        required/>\n                                </TableCell>\n                                <TableCell className={classes.ViewCell}>\n                                    <Select\n                                        variant = 'filled'\n                                        value={this.state.editor}\n                                        name='editor'\n                                        onChange={this.handleChange}\n                                       >\n                                           <MenuItem value = {true}>Edit</MenuItem>\n                                           <MenuItem value = {false}>View</MenuItem>\n                                       </Select>\n                                </TableCell>\n                            </>\n                        }\n                    </TableRow>\n                </>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    state\n});\n\nUserTableRow.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(UserTableRow));","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  withStyles,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport UserTableRow from \"./UserTableRow\";\nimport DynamicButton from \"../Buttons/DynamicButton\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\n\nconst styles = (theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n    height: \"fit-content\",\n    width: \"fit-content\",\n    maxWidth: \"1000px\",\n    textAlign: \"center\",\n  },\n  ReviewTable: {\n    overflowX: \"auto\",\n    whiteSpace: \"nowrap\",\n    border: \"1px solid #C0c0c0\",\n  },\n  textFields: {\n    maxWidth: \"175px\",\n    margin: \"5px\",\n  },\n  MiniTextFields: {\n    maxWidth: \"175px\",\n    margin: \"5px\",\n  },\n  ButtonContainer: {\n    display: \"flex\",\n    width: \"540px\",\n    justifyContent: \"space-between\",\n    align: \"center\",\n    marginTop: \"20px\",\n    marginLeft: \"5px\",\n  },\n  SubTitle: {\n    fontSize: \"18px\",\n    marginBottom: \"1rem\",\n  },\n  ReviewTable__head:{\n    backgroundColor: '#C0C0C0'\n  },\n  ReviewTable__head__cell:{\n    border: '1px solid black',\n    padding: '8px',\n  },\n  tip:{\n    fontSize: 'smaller',\n    color:'#757575'\n  },\n  Form:{\n    background: \"transparent\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"inherit\",\n    padding: \"0px\",\n    height: \"fit-content\",\n  }\n});\n\nclass AddUser extends Component {\n  state = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    editor: \"\",\n    open: false,\n    edit: 0,\n    invalidEmail:false\n  };\n\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  checkEmail = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"@\") && value.includes(\".\")) {\n      this.setState({\n        invalidEmail: false,\n      });\n    } else {\n      this.setState({\n        invalidEmail: true,\n      });\n    }\n  };\n\n  handleAddUser = () => {\n    let editor = 'none';\n      if(this.state.editor === 'edit'){\n        editor = true;\n      } else if  (this.state.editor === 'view'){\n        editor = false;\n      }\n    if (\n      this.state.first_name &&\n      this.state.last_name &&\n      this.state.email &&\n      editor !== \"none\"&&\n      !this.state.invalidEmail\n    ) {\n      const actionObject = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        phone: this.state.phone,\n        editor: editor,\n        organization_id: this.props.reduxState.organization.id,\n      };\n      this.props.dispatch({ type: \"ADD_USER\", payload: actionObject });\n      this.setState({\n        ...this.state,\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone: \"\",\n        editor: \"\",\n      });\n    } else {\n      //open alert dialog\n      this.handleOpen();\n    }\n  };\n\n  handlePhoneNumberChange = (value) => {\n    this.setState({\n      phone: value,\n    });\n  };\n\n  //fires if a row enters edit mode (edit is clicked)\n  handleEditMode = () =>{\n    let x = this.state.edit;\n    x++\n    this.setState({...this.state, edit:x})\n  }\n  \n  //fires if a row exits edit mode (save or x is clicked)\n  handleViewMode = () =>{\n    let x = this.state.edit;\n    x--\n    this.setState({...this.state, edit:x})\n  }\n\n\n  handleOpen = () => {\n    this.setState({ ...this.state, open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n        style={{\n          minHeight: \"75vh\",\n          minWidth: \"100vw\",\n        }}\n      >\n        {/* This dialog will run if add user is clicked without required fields filled */}\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"missing-fields\"\n          aria-describedby=\"enter-all-user-info-before-add\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"enter-all-user-info-before-add\">\n              Oops! Please ensure all required information is entered.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>OK</Button>\n          </DialogActions>\n        </Dialog>\n        <Grid item xs={8} style={{ minWidth: \"1000px\" }} align=\"center\">\n          <Paper className={classes.paper} elevation={3}>\n            <h1>Administrative Users</h1>\n            <p className={classes.SubTitle}>\n              These employees will have access to information on the ZEFNET\n              Portal\n            </p>\n            <Table\n              className={classes.ReviewTable}\n              inputProps={{ className: classes.TableRow }}\n            >\n              <TableHead className={classes.ReviewTable__head}>\n                <TableRow>\n                  <TableCell className={classes.ReviewTable__head__cell} />\n                  <TableCell className={classes.ReviewTable__head__cell}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={classes.ReviewTable__head__cell}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={classes.ReviewTable__head__cell}>\n                    Email\n                  </TableCell>\n                  <TableCell className={classes.ReviewTable__head__cell}>\n                    Phone\n                  </TableCell>\n                  <TableCell className={classes.ReviewTable__head__cell}>\n                    Privileges\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.reduxState.zefUser.map((user, index) => (\n                  <UserTableRow\n                    key={user.id}\n                    first_name={user.first_name}\n                    last_name={user.last_name}\n                    email={user.email}\n                    phone={user.phone}\n                    editor={user.editor}\n                    user_id={user.id}\n                    editMode = {this.handleEditMode} \n                    viewMode = {this.handleViewMode}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n            <br />\n            <h2>Add a New User</h2>\n\n            <form className={classes.Form}>\n              <Grid\n                container\n                dircetion=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <TextField\n                  required\n                  color=\"primary\"\n                  className={classes.MiniTextFields}\n                  label=\"First Name:\"\n                  variant=\"filled\"\n                  value={this.state.first_name}\n                  inputProps={{maxLength: 50}}\n                  onChange={this.handleInputChangeFor(\"first_name\")}\n                />\n                <TextField\n                  required\n                  color=\"primary\"\n                  className={classes.MiniTextFields}\n                  label=\"Last Name:\"\n                  variant=\"filled\"\n                  value={this.state.last_name}\n                  inputProps={{maxLength: 100}}\n                  onChange={this.handleInputChangeFor(\"last_name\")}\n                />\n                <TextField\n                  required\n                  color=\"primary\"\n                  error={this.state.invalidEmail}\n                  onBlur={this.checkEmail}\n                  className={classes.MiniTextFields}\n                  label=\"Email:\"\n                  variant=\"filled\"\n                  value={this.state.email}\n                  inputProps={{maxLength: 100}}\n                  onChange={this.handleInputChangeFor(\"email\")}\n                />\n                <MuiPhoneNumber\n                  color=\"primary\"\n                  defaultCountry={\"us\"}\n                  disableAreaCodes=\"true\"\n                  className={classes.MiniTextFields}\n                  label=\"Phone:\"\n                  variant=\"filled\"\n                  value={this.state.phone || \"\"}\n                  onChange={this.handlePhoneNumberChange}\n                  inputProps={{maxLength: 30}}\n                />\n                <FormControl variant=\"filled\" style={{ width: \"140px\" }}>\n                  <InputLabel>Privileges:</InputLabel>\n                  <Select\n                    required\n                    onChange={this.handleInputChangeFor(\"editor\")}\n                    className={classes.MiniTextFields}\n                    value={this.state.editor || '' }\n                  >\n                    <MenuItem value='view'>View</MenuItem>\n                    <MenuItem value='edit'>Edit</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <br />\n              <div className={classes.ButtonContainer}>\n                {this.state.edit?\n                <>\n                  <DynamicButton\n                    type=\"home\"\n                    text=\"Home\"\n                    isDisabled = {true}\n                    />\n                   <i className = {classes.tip}>please save or discard user changes</i>\n                </>\n                :\n                <DynamicButton\n                  type=\"home\"\n                  text=\"Home\"\n                  linkURL=\"/organizationHome\"\n                />\n                }\n                <DynamicButton\n                  type=\"add\"\n                  text=\"Add User\"\n                  handleClick={this.handleAddUser}\n                />\n              </div>\n            </form>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// maps redux state to this.props.reduxState\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\n//adds classes to props\nAddUser.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(AddUser));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  withStyles,\n  Accordion,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport {\n  AccordionSummary,\n  AccordionDetails,\n  Table,\n  TableCell,\n  TableBody,\n  Switch,\n  AccordionActions,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  ExpandMore as ExpandMoreIcon\n} from '@material-ui/icons';\nimport DynamicButton from \"../Buttons/DynamicButton\";\n\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justify: \"center\",\n    color: theme.palette.text.secondary,\n    fontFamily: \"inter, Open Sans, sans-serif\",\n    minHeight: \"80vh\",\n    background: \"white\",\n    textAlign: \"center\",\n    minWidth: \"1000px\",\n    maxWidth: '1000px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n  grow: {\n    flexGrow: 1,\n    minWidth: \"100px\",\n  },\n  table: {\n    maxWidth: \"1000px\",\n  },\n  reviewTable: {\n    overflowX: \"auto\",\n    whiteSpace: \"nowrap\",\n  },\n  ReviewTable__head: {\n    backgroundColor: \"#C0C0C0\",\n  },\n  ReviewTable__head__cell: {\n    border: \"1px solid black\",\n    padding: \"8px\",\n  },\n  MainSubTitle: {\n    marginBottom: \"2rem\",\n    fontSize: \"20px\",\n  },\n  SubTitle: {\n    marginBottom: \"1rem\",\n    fontSize: \"15px\",\n  },\n  DeviceSubTitle: {\n    fontSize: \"15px\",\n    marginBottom: \"1rem\",\n  },\n\n  Left:{\n    width: '75px'\n  },\n  Titles: {\n    fontWeight: 800,\n    wordWrap: 'break-word'\n  },\n  Information: {\n    fontWeight: 300,\n    display: 'inline-block',\n    wordBreak: 'break-word'\n  },\n  InformationMarginBottom: {\n    fontWeight: 300,\n    marginBottom: '5px'\n  },\n  FlexContainerColumn: {\n    display: 'flex',\n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'left',\n    width: '350px',\n    padding: '1rem 1.5rem 1rem 0',\n  },\n  CenterText: {\n      textAlign: 'center'\n  }\n});\n\nclass Submit extends Component {\n  state = {\n    tableMode: true,\n    open: false,\n    deletedName: \"\",\n    deletedID: \"\",\n  };\n\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleEditFor = (data) => {\n    //supply newdevice reducer with info for this device\n    const device = this.props.state.allDevice[data.index];\n    this.props.dispatch({ type: \"SET_NAME\", payload: device.name });\n    this.props.dispatch({ type: \"SET_ID\", payload: device.id });\n    const date = device.install_date.substring(0, 10);\n    this.props.dispatch({ type: \"SET_DATE\", payload: date });\n    const site = {\n      id: device.site_id,\n      address: device.address,\n      first_name: device.first_name,\n      second_name: device.second_name,\n      phone: device.phone,\n      email: device.email,\n      organization_id: this.props.state.organization.id,\n    };\n    this.props.dispatch({ type: \"SET_DEVICE_SITE\", payload: site });\n    this.props.dispatch({ type: \"FETCH_SITE_BREAKERS\", payload: site.id });\n    const breaker = {\n      description: device.description,\n      id: device.breaker_id,\n      limit: device.limit,\n      name: device.breaker_name,\n      site_id: device.site_id,\n    };\n    this.props.dispatch({ type: \"SET_BREAKER\", payload: breaker });\n    this.props.dispatch({\n      type: \"SET_SERIAL\",\n      payload: { number: device.serial_number },\n    });\n    const type = {\n      name: device.type_name,\n      id: device.type_id,\n    };\n    this.props.dispatch({ type: \"SET_TYPE\", payload: type });\n  }; //end handleReviewFor\n\n  handleSubmit = () => {\n    const sendObject = {\n      primary_user: this.props.state.user,\n      organization: this.props.state.organization,\n      host_sites: this.props.state.site,\n      devices: this.props.state.allDevice,\n    };\n    const onboardPackage = {\n      name: \"Zef EZ Onboard\",\n      //change to the email that we want to send emails to\n      email: \"afox09@gmail.com\",\n      message: JSON.stringify(sendObject),\n    };\n    this.props.dispatch({\n      type: \"SUBMIT_ORGANIZATION\",\n      payload: this.props.state.organization.id,\n    });\n    console.log(onboardPackage);\n    this.props.dispatch({ type: \"MAIL_PACKAGE\", payload: onboardPackage });\n  };\n\n  handleDelete = () => {\n    const deleteObject = {\n      id: this.state.deletedID,\n      org_id: this.props.state.organization.id,\n    };\n    this.props.dispatch({ type: \"DELETE_DEVICE\", payload: deleteObject });\n    this.handleClose();\n  };\n\n  handleClickOpen = (name, id) => {\n    this.setState({\n      ...this.state,\n      open: true,\n      deletedName: name,\n      deletedID: id,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"confirm-delete\"\n          aria-describedby=\"confirm-device-delete\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"confirm-device-delete\">\n              Are you sure you want to delete this device -{\" \"}\n              {this.state.deletedName}?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Oops, no.\n            </Button>\n            <Button onClick={this.handleDelete} color=\"primary\" autoFocus>\n              Yes, delete!\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <Grid item align=\"center\" style={{ marginBottom: \"2rem\" }}>\n              <h1>All Devices and ZefNet Users Added?</h1>\n              <p className={classes.MainSubTitle}>\n                Let's review all your data before you submit.\n              </p>\n              <h2>Here are your chosen users and corresponding information</h2>\n              <p className={classes.SubTitle}>\n                Please double-check all information and each user's privileges\n              </p>\n              <div className={classes.reviewTable}>\n              <Table className={classes.table}>\n                <TableHead className={classes.ReviewTable__head}>\n                  <TableRow>\n                    <TableCell className={classes.ReviewTable__head__cell}>\n                      First Name\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      className={classes.ReviewTable__head__cell}\n                    >\n                      Last Name\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      className={classes.ReviewTable__head__cell}\n                    >\n                      Email Address\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      className={classes.ReviewTable__head__cell}\n                    >\n                      Phone Number\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      className={classes.ReviewTable__head__cell}\n                    >\n                      Privileges\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody style={{ border: \"1px solid #C0C0C0\" }}>\n                  {this.props.state.zefUser.map((user, index) => (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {user.first_name}\n                      </TableCell>\n                      <TableCell align=\"right\">{user.last_name}</TableCell>\n                      <TableCell align=\"right\">{user.email}</TableCell>\n                      <TableCell align=\"right\">{user.phone}</TableCell>\n                      <TableCell align=\"right\">\n                        {user.editor ? \"Edit\" : \"View\"}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              </div>\n              <DynamicButton type=\"edit\" text=\"Edit Users\" linkURL=\"/addUser\"/>\n            </Grid>\n            <Grid item align=\"center\" xs={12}>\n              <h2>\n                Here are your devices, with breaker and location information\n              </h2>\n              <p className={classes.DeviceSubTitle}>\n                Use switch to view device table or expandable pages\n              </p>\n              <Grid\n                component=\"label\"\n                container\n                alignItems=\"center\"\n                spacing={1}\n                direction=\"row\"\n                justify=\"center\"\n                style={{ border: \"1px solid black\", maxWidth: \"320px\" }}\n              >\n                <Grid item>Expandable Form View</Grid>\n                <Grid item>\n                  <Switch\n                    checked={this.state.tableMode}\n                    onChange={this.handleChange(\"tableMode\")}\n                    value=\"tableMode\"\n                    color=\"primary\"\n                  />\n                </Grid>\n                <Grid item>Table View</Grid>\n              </Grid>\n            </Grid>\n            {/* Map out each device as an accordion, or a table */}\n            {this.state.tableMode ? (\n              <div className={classes.reviewTable}>\n                <Table>\n                  <TableHead className={classes.ReviewTable__head}>\n                    <TableRow>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      ></TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Device Name\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Device Type\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Serial Number\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Second Serial\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Installation Date\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Hosting Site Address\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Contact First Name\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Contact Last Name\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Contact Phone\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Contact Email\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Breaker Name\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Breaker Limit\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        className={classes.ReviewTable__head__cell}\n                      >\n                        Breaker Description\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody style={{ border: \"1px solid #e0e0e0\" }}>\n                    {this.props.state.allDevice.map((device, index) => (\n                      <TableRow key={index}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <Button\n                            variant=\"outlined\"\n                            onClick={() => {\n                              this.handleEditFor({ index });\n                            }}\n                            component={Link}\n                            to=\"/deviceReview\"\n                          >\n                            Edit <EditIcon />\n                          </Button>\n                          <Button\n                            variant=\"outlined\"\n                            onClick={() => {\n                              this.handleClickOpen(device.name, device.id);\n                            }}\n                          >\n                            Delete\n                            <DeleteIcon />\n                          </Button>\n                        </TableCell>\n                        <TableCell align=\"right\">{device.name}</TableCell>\n                        <TableCell align=\"right\">{device.type_name}</TableCell>\n                        <TableCell align=\"right\">\n                          {device.serial_number}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {device.serial_number2}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {\" \"}\n                          {device.install_date.substring(0, 10)}\n                        </TableCell>\n                        <TableCell align=\"right\">{device.address}</TableCell>\n                        <TableCell align=\"right\">{device.first_name}</TableCell>\n                        <TableCell align=\"right\">\n                          {device.second_name}\n                        </TableCell>\n                        <TableCell align=\"right\">{device.phone}</TableCell>\n                        <TableCell align=\"right\">{device.email}</TableCell>\n                        <TableCell align=\"right\">\n                          {device.breaker_name}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {device.limit}\n                          {\"\\u00A0\"}Amps\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {device.description}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            ) : (\n              <Grid item xs={12}>\n                {this.props.state.allDevice.map((device, index) => (\n                  <Accordion key={index} hover>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      style={{ backgroundColor: \"#C0C0C0\", margin: \"0\",wordBreak: 'break-word' }}\n                    >\n                      <h2>{device.name}</h2>\n\n                    </AccordionSummary>\n                    <AccordionActions>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          this.handleClickOpen(device.name, device.id);\n                        }}\n                      >\n                        Delete Device\n                        <DeleteIcon />\n                      </Button>\n                    </AccordionActions>\n                    <AccordionDetails>\n                      <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignContent=\"center\"\n                        alignItems=\"center\"\n                      >\n                      <Grid item align='center' xs={12}>\n                        <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                            <div className = {classes.Left}/>                  \n                            <h2>Hosting Location</h2> \n                            <DynamicButton type='edit' text=\"Edit\" linkURL='/hostSelect' handleClick={()=>this.handleEditFor({index})}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12} align='center' style={{backgroundColor: 'lightgrey'}}>\n                        <div className={classes.FlexContainerColumn}>\n                            <div className={classes.CenterText}>\n                                <p className={classes.Titles}>\n                                    Address:\n                                </p>\n                                <p className={classes.Information}>\n                                    {device.address}\n                                </p>\n                            </div>\n                        </div>                    \n                    </Grid>\n\n                    <Grid item align=\"center\" xs={12}>\n                        <h2>Local Contact for Location</h2>\n                    </Grid>\n                        \n                    <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                First Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {device.first_name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Second Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {device.second_name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Phone Number:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {device.phone}\n                            </p>\n                            <p className={classes.Titles}>\n                                Email Address:\n                            </p>\n                            <p className={classes.Information}>\n                                {device.email}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Breaker Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/breakerSelect' handleClick={()=>this.handleEditFor({index})}/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                \n                <div className={classes.FlexContainerColumn}>\n                    <div className={classes.CenterText}>\n                        <p className={classes.Titles}>\n                            Breaker Name:\n                        </p>\n                        <p className={classes.InformationMarginBottom}>\n                            {device.breaker_name}\n                        </p>\n                        <p className={classes.Titles}>\n                            Breaker Limit:\n                        </p>\n                        <p  className={classes.InformationMarginBottom}>\n                            {device.limit} AMPS\n                        </p>\n                        <p className={classes.Titles}>\n                            Breaker Description:\n                        </p>\n                        <p className={classes.Information}>\n                            {device.description}\n                        </p>\n                    </div>\n                </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Device Type</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceType' handleClick={()=>this.handleEditFor({index})}/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                Device Type:\n                            </p>\n                            <p className={classes.Information}>\n                                {device.type_name[0]}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction='row' alignItems='center' justify='space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Device Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceSerial' handleClick={()=>this.handleEditFor({index})}/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            {device.serial2 ?\n                                <>\n                                    <p className={classes.Titles}>Serial Number One:</p>\n                                    <p className={classes.InformationMarginBottom}>{device.serial_number}</p>\n                                    <p className={classes.Titles}>Serial Number Two:</p>\n                                    <p className={classes.Information}>{device.serial_number2}</p>\n                                </>\n                                :\n                                <>\n                                    <p className={classes.Titles}>Serial Number:</p>\n                                    <p className={classes.Information}>{device.serial_number}</p>\n                                </>\n                            }\n                        </div>\n                    </div> \n                </Grid>\n\n                <Grid item align='center' xs={12}>\n                    <Grid container direction = 'row' alignItems = 'center' justify = 'space-between'>\n                        <div className = {classes.Left}/> \n                        <h2>Additional Information</h2> \n                        <DynamicButton type='edit' text=\"Edit\" linkURL='/deviceName' handleClick={()=>this.handleEditFor({index})}/>\n                    </Grid>\n                </Grid>\n\n                <Grid item align='center' xs={12} style={{backgroundColor: 'lightgrey'}}>\n                    <div className={classes.FlexContainerColumn}>\n                        <div className={classes.CenterText}>\n                            <p className={classes.Titles}>\n                                Charger Name:\n                            </p>\n                            <p className={classes.InformationMarginBottom}>\n                                {device.name}\n                            </p>\n                            <p className={classes.Titles}>\n                                Installation Date:\n                            </p>\n                            <p className={classes.Information}>\n                                {device.install_date.substring(0,10)}\n                            </p>\n                        </div>\n                    </div> \n                </Grid>\n                </Grid>\n                    </AccordionDetails>\n                  </Accordion>\n                ))}\n              </Grid>\n            )}\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignContent=\"center\"\n              style={{ marginTop: \"35px\" }}\n            >\n              <DynamicButton\n                type=\"home\"\n                text=\"Home\"\n                linkURL=\"/organizationHome\"\n              />\n              <div className={classes.grow}>{\"\\u00A0\"}</div>\n              {this.props.state.allDevice.length > 0 ? \n                <DynamicButton\n                  key=\"enabled-submit-button\"\n                  type=\"submit\"\n                  text=\"Submit Onboarding Package for Review\"\n                  linkURL=\"/completed\"\n                  handleClick={this.handleSubmit}\n                />\n               : \n                <DynamicButton\n                  key=\"disabled-submit-button\"\n                  type=\"submit\"\n                  text=\"Please Add A Device Before Submitting\"\n                  isDisabled={true}\n                />\n              }\n            </Grid>\n          </Paper>\n        </div>\n      </Grid>\n    );\n\n  }\n}\n\nSubmit.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(Submit));\n","import React, { Component } from 'react';\nimport {Grid} from '@material-ui/core';\nimport {connect} from 'react-redux';\nimport DynamicButton from '../Buttons/DynamicButton'\n\n\nclass Completed extends Component {\n\n  // this component will be the landing place for any returning user with a completed onboarding application\n  //it can be viwed at /completed\n  render() {\n    let centerText = {textAlign: 'center', color: 'white', fontFamily: 'inter, Open Sans, sans-serif', marginBottom: '.5rem'}\n    return (\n        <>\n        <Grid container alignItems='center'>\n          <Grid item xs={12}>\n            <span style={{float: 'right'}}>\n              <DynamicButton type='logOut' text='Log Out' handleClick={() => this.props.dispatch({ type: 'LOGOUT' })}/>\n            </span>\n          </Grid>\n        </Grid>\n            <Grid item style={{marginBottom: '100px',  maxWidth: '600px'}} align='center' >\n                    <h1 style={centerText}>Your Onboarding Package has been Submitted for Processing!</h1>\n              <div style={{backgroundColor: '#1c2447', border: '1px solid white'}}>\n               <p style={{textAlign:'center', color: 'white', fontSize: '15px', margin: '1rem 0'}}>\n                        Thank you for submitting your onboarding package for review! \n                        <br/>We will email you at {this.props.reduxState.user.email}\n                        <br/>our average response is 1-2 business days.\n                        <br/>\n                        <br/>\n                        Thank you for choosing ZEF Energy! :)\n                    </p>\n              </div>\n              <br/>\n            </Grid>\n        </>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\n\nconst mapStateToProps = (reduxState) => ({\n    reduxState,\n  });\n  \n\nexport default connect(mapStateToProps)(Completed);","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\nimport WelcomeScreen from \"../WelcomeScreen/WelcomeScreen\";\nimport CreateOrganization from \"../Organization/CreateOrganization\";\nimport ViewOrganization from \"../Organization/ViewOrganization\";\nimport OrganizationHomeScreen from \"../Organization/HomeScreen\";\nimport EditOrganization from \"../Organization/EditOrganization\";\nimport HostSelect from \"../Device/HostSite/Select\";\nimport DeviceSelectType from \"../Device/DeviceSelectType\";\nimport DeviceSerial from \"../Device/DeviceSerial\";\nimport DeviceName from \"../Device/DeviceName\";\nimport DevicePrep from \"../Device/DevicePrep\";\nimport BreakerSelect from \"../Device/Breaker/Select\";\nimport Reset from \"../ForgotPass/Reset\";\nimport {\n  CssBaseline,\n  MuiThemeProvider,\n  createMuiTheme,\n  Grid,\n} from \"@material-ui/core\";\nimport DeviceReview from \"../Device/DeviceReview\";\nimport AddUser from \"../AddUser/AddUser\";\nimport \"./App.css\";\nimport Submit from \"../Submit/Submit\";\nimport Completed from \"../Submit/Completed\";\nimport 'typeface-inter';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \n      '\"Inter\", sans-serif',\n  },\n});\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: \"FETCH_USER\" });\n    \n  }\n\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <CssBaseline />\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className=\"background\"\n          >\n            <div>\n              <Switch>\n                {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n                <Redirect exact from=\"/\" to=\"/home\" />\n                <Route path = \"/reset/:id\" component={Reset}/>\n                <ProtectedRoute exact path=\"/home\" component={WelcomeScreen} />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/organizationHome\"\n                  component={OrganizationHomeScreen}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/createOrganization\"\n                  component={CreateOrganization}\n                />\n                <ProtectedRoute exact path=\"/home\" component={WelcomeScreen} />\n                <ProtectedRoute\n                  exact\n                  path=\"/hostSelect\"\n                  component={HostSelect}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/editOrganization\"\n                  component={EditOrganization}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/viewOrganization\"\n                  component={ViewOrganization}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/devicePrep\"\n                  component={DevicePrep}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/deviceType\"\n                  component={DeviceSelectType}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/deviceSerial\"\n                  component={DeviceSerial}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/deviceName\"\n                  component={DeviceName}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/breakerSelect\"\n                  component={BreakerSelect}\n                />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/deviceReview\"\n                  component={DeviceReview}\n                />\n\n                <ProtectedRoute exact path=\"/addUser\" component={AddUser} />\n\n                <ProtectedRoute exact path=\"/submit\" component={Submit} />\n                <ProtectedRoute exact path=\"/completed\" component={Completed} />\n\n                {/* If none of the other routes matched, we will show a 404. */}\n                <Route render={() => <h1>404</h1>} />\n              </Switch>\n            </div>\n          </Grid>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\nconst mapStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/zefpro.120340f6.png\";","module.exports = __webpack_public_path__ + \"static/media/dualHeadStylized.6ea806d8.jpg\";"],"sourceRoot":""}